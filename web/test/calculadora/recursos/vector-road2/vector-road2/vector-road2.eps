%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.0%%For: (Mia Demeyere) ()%%Title: (autobaan6cx12-4-09.eps)%%CreationDate: 4/12/09 12:00 PM%%BoundingBox: 0 -40 842 635%%HiResBoundingBox: 0 -39.2334 841.8906 634.2754%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 296.7754 421.5 296.7754%AI3_TileBox: 141.4448 -82.4785 700.4453 700.521%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 841.8898 673.509%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -82 637.2754 0.94 950 651 18 0 0 52 72 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-18 -2%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--5 Bn%AI5_BeginGradient: (New Gradient Swatch 3)(New Gradient Swatch 3) 0 2 Bd[<BFBFBFBFBEBEBEBEBDBCBCBCBCBBBBBBBABABAB9B9B9B9B7B7B7B7B6B6B6B5B4B3B3B3B2B2B2B1B0B0AFAFAFAEAEADADADACACACACABAAAAAAA9A9A9A8A8><ADADADADADADADADACACABABABABABABACACACACACABABAAAAAAAAA9A9A9A8A9A9A8A8A8A7A7A7A5A5A4A4A3A3A3A5A4A4A3A3A3A2A2A0A09F9F9E9E9E9D><ABABABAAAAAAAAAAAAAAAAAAAAAAAAAAA8A8A8A7A7A7A7A9A9A9A9A9A9A8A8A8A8A8A7A7A7A6A6A8A8A7A7A7A6A6A3A3A3A2A2A2A1A1A2A2A2A1A1A0A09F><E6E5E4E3E2E0DFDEDDDCDBDAD9D8D6D5D5D4D2D1CFCECDCCCBCAC9C8C6C4C3C1BFBDBBB9B7B5B3B2B0AEACAAA8A6A4A2A09E9B99979594918F8D8A888684><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E><000102030405060708090A0B0C0D0E0F0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2C2D2E2F303132333435363738393A3B><00010203040506070708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212223242425262728292A2B2C2D2E2F3031323233343536373839>4 %_Br[0.658823 0.615686 0.623529 0.517647 0.243137 0.231373 0.223529 2 50 100 %_BS%_0.658823 0.615686 0.623529 0.517647 0.243137 0.231373 0.223529 2 50 100 Bs0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 0 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 15)(Unnamed gradient 15) 0 2 Bd[<95959697989999999A9B9B9C9D9D9E9F9FA0A1A1A1A1A2A2A3A3A4A4A5A6A6A7A7A8A7A7A8A8A9A9AAA9AAAAABABABABABABACACACADADAEAEAEAFAFAFAEAEAEAFAFAFAFB0B0B0B1B1B1B0B0B1B1B1B2B2><7C7D7E7F7F8081828384848586878788898A8B8B8D8D8E8F8F90909192929394949596979898999A9A9A9A9B9B9C9C9D9E9E9F9FA0A0A1A1A2A2A3A3A3A5A5A5A6A6A7A7A7A8A8A9A9A9AAABABABACACAC><787879797A7B7C7C7D7E7F7F808181828283848485858687878889898A8B8B8C8C8D8D8E8E8F8F9090939394949595969697979898999A9A9B9B9C9C9C9D9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><252728292B2C2E2F303233343638393B3C3E404143444648494B4D4F5052545658595B5D5F616264666A6C6E70727475787A7C7E818385878A8C8E91939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBD><6D6C6B6A69686767666564636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443424241403F3E3D3C3B3A39383736353534333231302F2E2D2C2B2A2929282726252423><6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4947464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs0.3 0 50 0 %_BS%_0.3 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 36)(Unnamed gradient 36) 0 2 Bd[<BFBFBFBFBEBEBEBEBDBCBCBCBCBBBBBBBABABAB9B9B9B9B7B7B7B7B6B6B6B5B4B3B3B3B2B2B2B1B0B0AFAFAFAEAEADADADACACACACABAAAAAAA9A9A9A8A8><ADADADADADADADADACACABABABABABABACACACACACABABAAAAAAAAA9A9A9A8A9A9A8A8A8A7A7A7A5A5A4A4A3A3A3A5A4A4A3A3A3A2A2A0A09F9F9E9E9E9D><ABABABAAAAAAAAAAAAAAAAAAAAAAAAAAA8A8A8A7A7A7A7A9A9A9A9A9A9A8A8A8A8A8A7A7A7A6A6A8A8A7A7A7A6A6A3A3A3A2A2A2A1A1A2A2A2A1A1A0A09F><E6E5E4E3E2E0DFDEDDDCDBDAD9D8D6D5D5D4D2D1CFCECDCCCBCAC9C8C6C4C3C1BFBDBBB9B7B5B3B2B0AEACAAA8A6A4A2A09E9B99979594918F8D8A888684><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E><000102030405060708090A0B0C0D0E0F0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2C2D2E2F303132333435363738393A3B><00010203040506070708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212223242425262728292A2B2C2D2E2F3031323233343536373839>4 %_Br[0.658823 0.615686 0.623529 0.517647 0.243137 0.231373 0.223529 2 50 100 %_BS%_0.658823 0.615686 0.623529 0.517647 0.243137 0.231373 0.223529 2 50 100 Bs0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 0 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 4)(Unnamed gradient 4) 0 2 Bd[<BFBFBFBFBEBEBEBEBDBDBDBDBCBCBCBCBBBBBBBABABABABAB9B9B9B9B9B9B8B8B8B7B7B7B6B6B6B5B5B5B5B4B4B4B3B3B3B2B2B2B1B1B1B1B1B0B0B0AFAFAEAEAEAEADADACACABABABABAAAAA9A9A9A9A8A8A7A7A6A6A6A5A5A4A4A4A3A3A2A2A1A1A0A09F9F9E9E9E9D9C9C9C9B9B9A99999898979696959594949392929291908F8F8F8E8D8C8C8B8A8989898887878685858484838382828281807F7F7E7D7D7C7B7A7A797878777676757474737272717070706F6F6E6D6D6C6B6B6A6969686767666664636362616160605E5D5D5B5B5A59595757565555545453525250504F4F4E4D4D4C4C4B4B4A4848474746464545444443414140403F3F3E3E3D3D3C3C3B3B3939383837373636353534343333313130302F2F2F2E2E2D2D2C2C2B2B2A2A2A292927272626262525242423232321212020201F1F1E1E1E1D1D1C1C1C1C1C1C1B1B1A1A1A191919181818171717161616151515141414131313121212111111101010100F0F0F0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A090909090909090908080808070707070706060606050505050505050505050504040404040303030303030302020202020201010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000><ADADADADADADADADACACACACACACACACABABABABABABABAAAAAAAAAAAAA9A9A9A8A8A8A7A7A7A6A6A6A5A5A5A4A4A4A3A3A3A2A2A1A1A1A1A0A09F9F9E9E9D9D9D9C9C9B9B9A9A9A99999898979797979695959493939292919090908F8F8E8D8D8D8C8B8B8A8989898887868686858483838382818181807F7E7E7D7D7C7C7B7A7A7979787777777675747473727171706F6F6F6E6D6D6C6C6C6B6A6A6A696868676665656463636261616160605F5E5E5D5C5C5B5B5B5A595958575756555554535353535150504F4E4E4D4D4C4B4B4A4A4847474646454444434342414140403F3F3E3D3D3C3C3B3B3A3939383837373636353535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A2929282827272626252524242423232222212120202020201F1F1E1E1D1D1D1C1C1B1B1B1B1B1A1A1919191818171717161615151514141414141313131212121111111010101010100F0F0F0E0E0E0D0D0D0D0D0D0C0C0C0B0B0B0B0A0A0A0A0A0A090909090808080807070707060606060606060605050505040404040404040404030303030303030303030302020202020202020202020201010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><ABABABAAAAAAAAAAAAA9A9A9A9A9A8A8A8A8A8A7A7A7A7A7A7A7A6A6A6A6A6A5A5A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A0A0A09F9F9E9E9E9E9D9D9D9C9B9B9B9A9A999998979797969695959493939392929191919190908F8F8E8E8E8D8C8B8B8B8A8988888787878685858584848382828181807F7F7F7E7D7D7C7B7B7B7A79787878777675757574737372727171706F6F6F6E6D6D6C6C6C6B6A6A6A69686867676666656464646363626161605F5F5E5D5D5D5C5C5B5A5A59585857565655555554545352525150504F4F4E4C4C4B4B4A484847474645454444434242414140403F3E3E3D3D3C3C3B3A3A3939383838383737363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A2929292928282626252525242423232222212121212120201F1F1E1E1E1D1D1C1C1C1C1C1B1B1A1A1A1919181818171717171716161615151414141313131212121212121111111010100F0F0F0E0E0E0D0D0D0C0C0C0B0B0B0B0B0B0B0A0A0A090909090808080807070707060606060606060605050505040404040404040404030303030303030303030302020202020202020202020201010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><E6E5E4E3E2E0DFDEDDDCDBDAD9D8D7D5D4D3D1D0CECDCCCBCACAC9C7C6C4C2C0BEBDBBB9B7B5B3B1AFADADABA9A6A4A2A09E9C9997959593908E8C8987858383807E7C7977757373716F6D6B6967656563615F5D5C5C5A5856545353514F4D4C4A4A484645434141403E3D3B3B39383635353332312F2F2E2C2B2B2A2827272524222121201E1D1D1C1B1A1A1918171716151514131212111010100F0E0E0D0C0C0B0A0A0A090808070707060606050505040404030303030303020202020202010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><000102030405060708090A0B0C0D0E0F10111213141516171818191A1B1C1D1E1F20212223242526272828292A2B2C2D2E2F30313233333435363738393A3B3B3C3D3E3F4041424243444546474849494A4B4C4D4E4E4F5051525353545556575858595A5B5C5D5D5E5F606161626364656566676869696A6B6C6C6D6E6F6F707172737374757676777879797A7B7C7C7D7E7E7F80818182838384858686878888898A8B8B8C8D8D8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A8A9AAAAABABACADADAEAEAFB0B0B1B1B2B2B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBCBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECECFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D6D6D6D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E0E1E1E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECECEDEDEDEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFAFAFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000102030405060708090A0B0C0D0E0F10111213141516171818191A1B1C1D1E1F20212223242526272828292A2B2C2D2E2F30313233333435363738393A3B3B3C3D3E3F4041424243444546474849494A4B4C4D4E4E4F5051525353545556575858595A5B5C5D5D5E5F606161626364656566676869696A6B6C6C6D6E6F6F707172737374757676777879797A7B7C7C7D7E7E7F80818182838384858686878888898A8B8B8C8D8D8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A8A9AAAAABABACADADAEAEAFB0B0B1B1B2B2B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBCBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECECFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D6D6D6D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E0E1E1E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECECEDEDEDEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFAFAFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF><000102030405060708090A0B0C0D0E0F10111213141516171818191A1B1C1D1E1F20212223242526272828292A2B2C2D2E2F30313233333435363738393A3B3B3C3D3E3F4041424243444546474849494A4B4C4D4E4E4F5051525353545556575858595A5B5C5D5D5E5F606161626364656566676869696A6B6C6C6D6E6F6F707172737374757676777879797A7B7C7C7D7E7E7F80818182838384858686878888898A8B8B8C8D8D8E8F8F9091919293939495959697979899999A9B9B9C9D9D9E9F9FA0A0A1A2A2A3A4A4A5A5A6A7A7A8A8A9AAAAABABACADADAEAEAFB0B0B1B1B2B2B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBCBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECECFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D6D6D6D7D7D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E0E1E1E2E2E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEBEBEBECECECECEDEDEDEEEEEEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F4F4F4F4F5F5F5F5F5F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFAFAFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>4 %_Br[0 0 0 0 1 1 1 2 50 100 %_BS%_0 0 0 0 1 1 1 2 50 100 Bs0.74902 0.678431 0.670588 0.901961 0 0 0 2 30.9783 0 %_BS%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 30.9783 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 6 Bd[<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br[0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 6 Bd[0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br[0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Offset Squares Pattern)(Offset Squares Pattern) 0 0 55.0781 55.0801 [%AI3_Tile(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 55.0801 L55.0781 55.0801 L55.0781 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR26.1436 52.3262 m26.1436 29.4307 L3.03125 29.4307 L3.03125 52.3262 L26.1436 52.3262 Lf25.0264 50.123 m5.89063 50.123 L5.89063 32.4961 L25.0264 32.4961 L25.0264 50.123 Lf*U*u5.89063 50.123 m25.0264 50.123 L25.0264 32.4961 L5.89063 32.4961 L5.89063 50.123 Ln10.0313 34.2578 m24.1338 34.2578 L24.1338 48.3613 L10.0313 48.3613 L10.0313 34.2578 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR22.4082 48.793 m8.30566 48.793 L8.30566 34.6895 L22.4082 34.6895 L22.4082 48.793 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR52.6943 24.7852 m52.6943 1.67578 L28.9355 1.67578 L28.9355 24.7852 L52.6943 24.7852 Lf47.6777 22.582 m30.0527 22.582 L30.0527 4.95703 L47.6777 4.95703 L47.6777 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR30.0527 22.582 m50.6982 22.582 L50.6982 4.95703 L30.0527 4.95703 L30.0527 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR47.4199 21.252 m32.2393 21.252 L32.2393 6.50293 L47.4199 6.50293 L47.4199 21.252 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR27.5391 27.5391 m27.5391 0 L0 0 L0 27.5391 L27.5391 27.5391 Lf25.4316 26.1445 m2.75293 26.1445 L2.75293 2.16992 L25.4316 2.16992 L25.4316 26.1445 Lf*U*u4.95605 7.40039 m22.582 7.40039 L22.582 25.0273 L4.95605 25.0273 L4.95605 7.40039 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR22.582 5.67383 m4.95605 5.67383 L4.95605 25.0273 L22.582 25.0273 L22.582 5.67383 Lf20.3887 21.3281 m7.58105 21.3281 L7.58105 10.0313 L20.3887 10.0313 L20.3887 21.3281 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR6.93555 8.73633 m21.0371 8.73633 L21.0371 22.8379 L6.93555 22.8379 L6.93555 8.73633 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR55.0781 55.0801 m55.0781 27.5391 L27.5391 27.5391 L27.5391 55.0801 L55.0781 55.0801 Lf52.3252 50.9688 m30.292 50.9688 L30.292 28.9355 L52.3252 28.9355 L52.3252 50.9688 Lf*U*u30.292 50.9688 m52.3252 50.9688 L52.3252 28.9355 L30.292 28.9355 L30.292 50.9688 Ln32.4951 30.0527 m50.1221 30.0527 L50.1221 47.6777 L32.4951 47.6777 L32.4951 30.0527 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR50.1221 30.0527 m32.4951 30.0527 L32.4951 48.9727 L50.1221 48.9727 L50.1221 30.0527 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa 0 0.901961 0 0 1 0.2 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR34.9063 33.749 m49.0078 33.749 L49.0078 47.8506 L34.9063 47.8506 L34.9063 33.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7769.8833 8488.2305 m-7678.0479 8488.2305 L-7678.0479 8483.9512 L-7769.8833 8483.9512 L-7769.8833 8488.2305 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7769.6631 8485.5498 m-7770 8485.6172 -7769.4814 8485.8066 -7769.8833 8485.6641 C-7769.8379 8485.5449 -7769.7725 8485.457 -7769.6631 8485.5498 Cf-7679.1675 8485.7168 m-7680.2529 8486.4785 -7681.6816 8485.709 -7682.8701 8486.1953 C-7683.0098 8486.2266 -7682.8354 8485.7773 -7683.1484 8485.877 C-7684.3008 8486.4697 -7686.1162 8486.1162 -7687.5195 8485.6602 C-7687.4346 8485.542 L-7687.7021 8485.457 -7688.0283 8485.8477 -7688.3115 8485.793 C-7688.3135 8485.7148 -7688.2207 8485.6816 -7688.2861 8485.5723 C-7688.3574 8485.8105 -7688.7979 8485.6826 -7688.9189 8485.8594 C-7689.0303 8485.7676 -7689.0195 8485.5801 -7689.1641 8485.4746 C-7689.3262 8485.7441 L-7689.7769 8486.3848 -7690.4209 8485.7002 -7691.0361 8486.0313 C-7691.0063 8485.9688 -7690.9453 8485.9199 -7690.9941 8485.8594 C-7691.9814 8486.248 -7693.2168 8486.1738 -7694.3208 8486.3184 C-7694.2769 8486.2236 -7694.2363 8486.0508 -7694.3008 8485.9434 C-7694.3555 8486.2266 -7694.6963 8486.2979 -7694.9922 8486.3535 C-7695.1255 8486.0625 -7695.4995 8486.6191 -7695.8467 8486.458 C-7695.8169 8486.3945 L-7696.0732 8486.6992 -7696.1973 8486.2188 -7696.4053 8486.584 C-7696.5684 8486.3555 L-7696.6807 8486.7656 -7696.9395 8486.1426 -7697.1514 8486.3516 C-7697.1445 8486.4346 L-7697.3442 8486.5352 -7697.4482 8486.3281 -7697.6338 8486.3984 C-7697.6514 8486.3516 L-7698.0854 8486.458 -7698.3379 8486.2305 -7698.3271 8486.5498 C-7698.4795 8486.293 -7697.9063 8486.4336 -7698.1455 8486.0586 C-7699.5732 8486.3906 -7701.0459 8486.3242 -7702.4834 8486.332 C-7702.6465 8486.2031 -7702.7505 8486.1641 -7702.7871 8486.042 C-7702.9307 8486.1074 -7703.3281 8486.1016 -7703.4585 8486.2656 C-7703.4102 8486.2588 -7703.5513 8486.1016 -7703.6274 8486.085 C-7703.8887 8485.9648 -7703.9131 8486.4375 -7704.2002 8486.293 C-7704.0859 8486.209 -7704.0469 8486.1055 -7704.0854 8485.9863 C-7704.3301 8486.2354 -7704.6577 8486.1953 -7704.9473 8486.2773 C-7704.9023 8486.2236 -7704.8325 8486.1914 -7704.8433 8486.0908 C-7705.1602 8486.374 -7705.4209 8486.0313 -7705.6982 8486.21 C-7705.5947 8486.0254 L-7706.0415 8485.8008 -7705.7266 8486.4121 -7706.1128 8486.2793 C-7706.02 8486.2207 -7706.0527 8486.1484 -7706.0361 8486.0732 C-7706.3965 8486.4092 -7706.9795 8486.2979 -7707.3389 8486.4121 C-7707.3174 8486.3857 -7707.3232 8486.3359 Y-7707.7148 8486.377 -7708.1245 8486.2734 -7708.5552 8486.4199 C-7708.7119 8486.3369 -7708.5039 8485.9688 -7708.9185 8486.0361 C-7708.9033 8486.4082 -7709.6221 8486.1895 -7709.3779 8486.6094 C-7709.7319 8486.5488 -7710.2925 8486.4092 -7710.5283 8486.5352 C-7710.3691 8486.3945 -7710.7007 8486.082 -7710.4063 8486.0508 C-7710.6289 8485.8252 L-7710.5957 8485.6738 -7710.3999 8485.877 -7710.4707 8485.6855 C-7710.6182 8485.7002 -7711.0479 8485.8477 -7711.1797 8485.7871 C-7711.4531 8486.0146 -7711.7041 8486.4395 -7712.1465 8486.4863 C-7711.9385 8486.3418 -7712.2646 8486.0762 -7712.1235 8486.0137 C-7712.7407 8486.7227 L-7712.8877 8486.7402 -7712.7725 8486.4316 -7712.9854 8486.5273 C-7712.9746 8486.626 -7713.0674 8486.6865 -7713.1318 8486.7676 C-7713.1875 8486.7227 -7713.7441 8486.8594 -7713.8081 8486.4922 C-7713.8735 8486.3516 -7713.5684 8486.418 -7713.7314 8486.2871 C-7714.0029 8486.29 -7714.0151 8486.416 -7714.2871 8486.4209 C-7714.2925 8486.373 L-7714.4717 8486.3184 -7714.8213 8486.5273 -7714.6265 8486.7305 C-7714.5015 8486.7402 -7714.6738 8486.5098 -7714.4888 8486.6172 C-7714.6152 8486.8281 -7714.9312 8486.8887 -7715.2031 8486.8906 C-7715.1104 8486.834 -7715.1216 8486.7354 -7715.0845 8486.6328 C-7715.4497 8486.9199 -7715.8369 8487.0098 -7716.2451 8487.1309 C-7716.2515 8487.3047 -7716.0928 8486.8145 -7716.0327 8486.9063 C-7716.5557 8486.665 -7717.1128 8487.248 -7717.5479 8486.8945 C-7717.4766 8486.8652 -7717.5098 8487.1426 -7717.5146 8487.0938 C-7717.7666 8487.0723 -7717.7549 8486.8193 -7717.9189 8486.9121 C-7717.9355 8486.7656 -7718.1255 8486.9609 -7718.2944 8487.0059 C-7718.3818 8487.1113 -7718.3384 8486.9336 -7718.1914 8486.918 C-7718.4268 8487.042 -7719.3691 8487.2695 -7719.9131 8487.0537 C-7719.9023 8487.1514 -7720.2471 8487.4121 -7720.3721 8487.4023 C-7720.3232 8487.1738 L-7720.4375 8487.0361 -7720.7422 8487.1934 -7720.7632 8486.998 C-7721.0303 8487.2754 -7719.7344 8486.7617 -7720.0957 8486.9756 C-7720.1895 8486.7852 -7720.5991 8487.3398 -7720.5215 8487.0273 C-7720.7725 8487.0361 -7721.0161 8487.293 -7721.2559 8487.0801 C-7721.1865 8487.1162 -7721.0522 8486.7617 -7721.2549 8486.7793 C-7721.6123 8486.8193 -7721.3564 8486.8887 -7721.6465 8486.9648 C-7721.8281 8487.0586 L-7721.8398 8487.2813 -7722.1475 8487.0273 -7722.0146 8487.2773 C-7722.0586 8487.0938 -7722.5337 8487.3906 -7722.4971 8487.0215 C-7722.4473 8486.7305 L-7722.6016 8486.752 -7722.7002 8487.0361 -7722.8213 8487.165 C-7722.8418 8487.1387 -7722.8823 8487.0801 -7722.8745 8487.0332 C-7722.8994 8487.4785 -7723.2432 8486.9961 -7723.4268 8487.3398 C-7723.7505 8487.1855 -7724.2495 8487.3242 -7724.4023 8487.0488 C-7724.6514 8487.1836 -7724.8784 8487.3418 -7725.1621 8487.248 C-7725.1055 8487.2061 -7725.0283 8487.1934 -7725.0122 8487.0977 C-7725.1904 8486.9658 -7725.2344 8487.084 -7725.3975 8487.1563 C-7725.3608 8487.0898 -7725.7539 8486.8945 -7725.9521 8486.7383 C-7726.1992 8486.8711 -7726.1143 8487.1113 -7726.1392 8487.2578 C-7726.3652 8486.8184 -7726.8379 8487.541 -7727.1211 8487.1426 C-7727.0352 8487.082 -7726.7598 8486.9258 -7726.9658 8486.8154 C-7727.1919 8486.377 -7727.4219 8487.1387 -7727.7861 8486.9297 C-7727.6968 8487.293 L-7727.8594 8487.0684 -7728.2334 8487.5059 -7728.1963 8487.1338 C-7728.3184 8487.2656 -7728.6265 8487.0137 -7728.5859 8487.3682 C-7729.1846 8487.0684 -7730.0425 8487.5498 -7730.4102 8486.9121 C-7730.4961 8486.9727 -7730.7104 8486.9121 -7730.6665 8487.0938 C-7730.5239 8487.293 -7730.4673 8486.9521 -7730.4141 8487.0879 C-7730.4912 8487.0986 -7730.5078 8487.1953 -7730.5161 8487.2441 C-7730.7021 8487.1641 -7730.8486 8487.1387 -7730.6729 8486.8428 C-7731.0869 8486.623 -7731.1001 8487.4473 -7731.6274 8487.3066 C-7731.6035 8487.1602 -7731.6436 8487.1055 -7731.7979 8487.1289 C-7732.0903 8487.3809 L-7732.4312 8487.3223 -7732.2842 8487.0449 -7732.2925 8486.7969 C-7732.4746 8486.8398 -7732.6973 8486.8281 -7732.7803 8487.0137 C-7733.0015 8486.7002 L-7732.8398 8486.9258 -7733.1514 8486.8506 -7733.2368 8486.9121 C-7733.1514 8486.8506 L-7733.1846 8486.7441 -7733.3955 8486.8105 -7733.5024 8486.8418 C-7733.4766 8486.9961 -7733.2617 8487.0586 -7733.1445 8487.1025 C-7733.2373 8487.2129 -7733.3823 8487.1865 -7733.5059 8487.3164 C-7733.4648 8487.0723 -7733.8027 8487.1426 -7733.9473 8487.1162 C-7734.1133 8487.0645 -7734.1348 8487.3359 -7734.1831 8487.3281 C-7734.1875 8487.2012 -7734.4541 8487.3066 -7734.3247 8487.1289 C-7734.2681 8487.0879 -7734.1953 8487.252 -7734.1016 8487.1387 C-7734.2109 8487.0449 -7734.1982 8486.8252 -7734.4258 8486.9863 C-7734.5967 8487.1074 -7734.3818 8487.4688 -7734.7061 8487.3145 C-7734.6211 8487.2529 -7734.6055 8487.1563 -7734.5391 8487.0684 C-7734.8433 8486.9414 L-7734.8564 8487.1641 L-7734.8975 8487.1074 -7734.8691 8487.0879 -7734.8877 8487.0586 C-7734.9785 8487.293 -7735.3521 8487.1309 -7735.4209 8487.3945 C-7735.5742 8487.418 -7735.7441 8487.2402 -7735.8906 8487.2139 C-7735.8623 8487.1953 L-7736.0415 8487.0645 -7736.2793 8487.1504 -7736.4297 8487.3008 C-7736.4219 8487.252 L-7736.5195 8487.2344 -7736.7505 8487.2695 -7736.8735 8487.3994 C-7737.1201 8487.2314 -7736.9561 8486.5596 -7737.2295 8486.8398 C-7737.48 8486.8477 -7737.6221 8487.248 -7737.5215 8487.3906 C-7737.9717 8487.2402 -7738.4834 8487.6025 -7738.9009 8487.2578 C-7738.9658 8487.3477 -7738.9248 8487.4033 -7739.0586 8487.457 C-7739.7197 8487.3682 -7740.4551 8487.7207 -7740.9814 8487.2832 C-7740.79 8487.1895 -7740.9688 8487.0586 -7740.9727 8486.9336 C-7741.1309 8487.1328 -7741.1631 8486.7266 -7741.2197 8487.0684 C-7741.2041 8487.2695 -7741.2197 8487.3672 -7741.0337 8487.4482 C-7741.4282 8487.5566 -7742.0283 8487.5566 -7742.2471 8487.3682 C-7742.1377 8487.4609 -7742.2227 8487.5234 -7742.3086 8487.584 C-7742.2803 8487.2617 -7742.5713 8487.2139 -7742.7915 8487.3281 C-7742.8223 8487.5234 L-7742.9658 8487.3223 L-7743.0503 8487.3848 -7743.0591 8487.7324 -7743.2773 8487.5449 C-7743.2891 8487.4688 -7743.3018 8487.3916 -7743.3418 8487.3359 C-7743.5693 8487.4961 -7743.8906 8487.7676 -7744.1377 8487.6016 C-7744.3398 8487.3164 L-7744.4453 8487.3477 -7744.6235 8487.5186 -7744.4375 8487.6016 C-7744.8594 8487.4297 -7745.1309 8487.4082 -7745.2646 8487.1602 C-7745.9912 8487.7617 -7747.0459 8487.7871 -7747.8906 8487.7441 C-7747.8652 8487.5977 L-7748.0923 8487.4609 -7747.9834 8487.8535 -7748.1416 8487.752 C-7748.0684 8487.6113 -7748.3145 8487.4482 -7748.1362 8487.2773 C-7748.4609 8487.123 -7748.5547 8487.5313 -7748.7656 8487.5977 C-7748.7979 8487.79 -7748.5957 8487.4746 -7748.6367 8487.7178 C-7748.6729 8487.7871 -7749.0859 8487.5674 -7749.1362 8487.8594 C-7749.2178 8487.7441 -7749.1543 8487.5313 -7749.1104 8487.4121 C-7749.3086 8487.5537 L-7749.5513 8487.2139 -7748.7559 8486.9473 -7749.0107 8486.5273 C-7749.1934 8486.5723 L-7749.3682 8486.2695 -7748.71 8486.2305 -7749.1689 8486.126 C-7749.3682 8486.2695 -7749.5381 8486.6914 -7749.3608 8486.8193 C-7749.7754 8486.9004 -7749.5527 8487.5137 -7749.9985 8487.4893 C-7750.1201 8487.3184 -7749.6416 8487.4482 -7749.7275 8487.209 C-7749.9375 8486.9746 -7750.1484 8487.3398 -7750.3354 8487.2578 C-7750.1279 8487.3672 -7750.3032 8487.6602 -7750.4375 8487.7148 C-7750.6641 8487.5762 -7750.29 8487.4395 -7750.6113 8487.4092 C-7750.6641 8487.5762 -7750.9595 8487.7031 -7750.7041 8487.8193 C-7750.8203 8488.2012 -7751.0381 8487.7148 -7751.2129 8488.0098 C-7751.3174 8487.7402 -7750.8823 8487.3906 -7751.2354 8487.2568 C-7751.1792 8487.5146 -7751.6704 8487.6074 -7751.4839 8487.9893 C-7751.6221 8487.916 -7751.6367 8487.7129 -7751.5361 8487.5537 C-7751.7334 8487.3945 -7752.0151 8488.0254 -7752.0801 8487.5137 C-7752.1479 8487.7773 L-7752.21 8487.6914 -7752.2983 8487.626 -7752.3994 8487.4844 C-7752.5732 8487.4785 -7752.96 8487.8418 -7752.9443 8487.4434 C-7753 8487.4844 -7753.3975 8487.4668 -7753.2441 8487.7402 C-7752.9971 8487.9082 -7752.96 8487.541 -7752.8223 8487.9121 C-7752.9971 8487.6094 -7753.1787 8487.9521 -7753.3213 8488.0537 C-7753.3447 8487.9004 L-7753.4297 8487.9609 -7753.6255 8487.9258 -7753.6787 8488.0938 C-7753.6133 8488.0059 -7753.6475 8487.9004 -7753.7148 8487.8633 C-7753.8042 8488.0977 L-7754.1494 8488.2139 -7753.8857 8487.6855 -7754.2217 8487.7529 C-7753.9663 8487.5723 L-7754.0225 8487.6113 -7754.1367 8487.3916 -7754.2979 8487.4648 C-7754.3604 8487.6777 -7754.4775 8487.9346 -7754.5313 8488.1016 C-7754.7207 8488.1953 -7754.6162 8487.8604 -7754.8027 8488.0801 C-7754.5586 8487.8223 L-7754.5215 8487.752 -7754.7231 8487.4688 -7754.9761 8487.4746 C-7755.1377 8487.5488 -7755.3887 8487.8574 -7755.1338 8487.9746 C-7755.2607 8487.9785 -7755.4385 8487.8477 -7755.3379 8487.6914 C-7755.6255 8487.7656 -7755.2998 8487.9209 -7755.5479 8488.0537 C-7755.6494 8487.9121 -7755.9658 8487.709 -7756.1563 8487.502 C-7755.8975 8487.1436 L-7756.0693 8487.1387 L-7755.8467 8486.8535 -7756.1826 8486.9209 -7756.0566 8486.6191 C-7756.1743 8486.5723 -7756.3169 8486.6748 -7756.4307 8486.7529 C-7756.0864 8487.2383 -7756.8159 8487.416 -7756.7158 8487.8574 C-7757.1875 8487.9785 -7757.0107 8486.7832 -7757.5024 8487.4746 C-7757.4219 8487.5898 -7757.6533 8487.9258 -7757.3564 8487.7979 C-7757.6494 8487.75 -7757.5557 8488.2412 -7757.9014 8488.0586 C-7757.6455 8487.877 -7758.1763 8487.6113 -7757.8066 8487.3477 C-7757.8311 8487.4922 -7757.6001 8487.458 -7757.5435 8487.418 C-7757.6641 8487.248 -7757.5186 8486.9727 -7757.8184 8486.9727 C-7758.0015 8487.0146 -7758.2524 8487.0234 -7758.2158 8487.2529 C-7758.2085 8487.5068 -7757.9365 8487.2266 -7758.0537 8487.4824 C-7758.4185 8487.5703 -7758.4795 8487.1855 -7758.6304 8487.6348 C-7758.3999 8487.5986 -7758.3423 8487.8594 -7758.3467 8488.0332 C-7758.6143 8488.1387 L-7758.5625 8487.9697 L-7758.9922 8487.8496 -7758.6895 8488.2754 -7759.1055 8488.2305 C-7759.3008 8487.8984 L-7759.2017 8487.6113 -7758.6953 8488.0254 -7758.7695 8487.5596 C-7759.04 8487.541 -7759.1299 8487.7773 -7759.3848 8487.6572 C-7759.3281 8487.6172 -7759.2505 8487.6055 -7759.1943 8487.5645 C-7759.2915 8487.5488 -7759.3877 8486.9307 -7759.7734 8487.293 C-7759.9727 8487.4336 -7759.8262 8487.458 -7759.8311 8487.6328 C-7760.2656 8487.6855 -7760.3955 8487.8633 -7760.6753 8487.8906 C-7760.6177 8487.5498 -7761.1699 8487.8574 -7760.8608 8487.5098 C-7760.7188 8487.709 -7760.0903 8487.6895 -7759.9365 8487.3643 C-7760.0947 8486.9609 -7759.5952 8487.4209 -7759.5024 8487.0137 C-7759.8506 8487.0039 -7759.8335 8486.6074 -7759.8896 8486.3477 C-7759.9863 8486.3281 -7760.0801 8486.4395 -7760.1377 8486.4785 C-7760.1787 8486.7227 -7760.0522 8486.7207 -7760.0449 8486.9727 C-7760.4336 8486.9063 -7760.8081 8487.042 -7761.0225 8487.2813 C-7761.1523 8487.1602 -7761.1113 8486.916 -7760.9575 8486.8906 C-7761.4199 8486.9648 -7761.9141 8486.9307 -7762.3535 8486.8574 C-7762.0693 8487.2568 -7762.8433 8486.9512 -7762.6494 8487.2832 C-7762.4141 8487.373 -7762.2119 8487.6572 -7762.3418 8487.8359 C-7762.4888 8487.8105 -7762.3369 8487.6602 -7762.3984 8487.5762 C-7762.5859 8487.793 -7762.6895 8487.2266 -7762.8735 8487.5703 C-7762.4512 8487.4414 -7762.7915 8487.084 -7762.7139 8486.7705 C-7763.0186 8486.9473 -7762.7007 8486.5488 -7763.0024 8486.5488 C-7763.3057 8486.7227 -7763.6787 8486.8594 -7764.0161 8486.9258 C-7764.4399 8486.6309 -7765.0898 8486.9209 -7765.4683 8486.9336 C-7765.6665 8486.7754 -7765.5322 8486.4209 -7765.7471 8486.3594 C-7765.9995 8486.3672 -7765.5601 8486.7402 -7765.9336 8486.5801 C-7765.8975 8486.5098 L-7766.0107 8486.5898 -7766.5825 8486.2695 -7766.6929 8486.7773 C-7766.5776 8486.3945 L-7766.6475 8486.3594 -7766.7119 8486.4473 -7766.7695 8486.4873 C-7766.7725 8486.3633 -7766.8535 8486.25 -7766.7402 8486.168 C-7766.9707 8485.9033 -7767.2241 8486.21 -7767.4746 8486.2207 C-7767.3135 8486.4473 L-7767.7422 8486.625 -7768.0293 8486.3994 -7768.4443 8486.4785 C-7768.4316 8486.2578 L-7768.6787 8486.3906 L-7768.6182 8486.1738 -7768.8447 8486.0361 -7768.9751 8486.2168 C-7768.3335 8485.6738 L-7768.1553 8485.8047 -7768.5283 8485.9414 -7768.4165 8486.1602 C-7768.3213 8486.3516 -7767.9375 8486.29 -7767.8755 8486.0762 C-7768.0225 8486.0527 -7768.0293 8486.1016 -7768.1436 8486.1816 C-7768.1919 8485.873 -7767.9688 8485.8848 -7767.8584 8485.6777 C-7767.9355 8485.6914 -7768.0449 8485.5977 -7768.0615 8485.6953 C-7767.9102 8485.5449 -7767.7578 8485.5215 -7767.5059 8485.5137 C-7767.6763 8485.6348 -7767.4131 8485.7041 -7767.4775 8485.793 C-7767.4575 8485.5215 -7767.2168 8485.4375 -7766.9053 8485.5137 C-7766.6831 8485.8281 -7766.3208 8485.3105 -7765.96 8485.3984 C-7766.1064 8485.6738 -7766.2935 8485.8945 -7766.5127 8486.0059 C-7766.2861 8486.1436 -7766.2607 8485.998 -7766.0337 8486.1367 C-7765.9238 8485.9307 -7765.8457 8485.6172 -7765.5503 8485.4922 C-7765.5342 8485.6953 L-7765.2666 8485.5898 -7765.2666 8485.29 -7764.9258 8485.3477 C-7764.3418 8485.4473 -7763.7407 8485.4473 -7763.2949 8485.4727 C-7763.2783 8485.6748 L-7763.0303 8485.2412 -7762.4521 8485.5146 -7762.1182 8485.3223 C-7761.5503 8485.5176 -7760.8848 8485.1289 -7760.5938 8485.4785 C-7759.5913 8485.3223 -7758.7148 8485.1689 -7757.6768 8485.2441 C-7757.8516 8485.5391 L-7757.6655 8485.3223 -7757.7305 8485.709 -7757.5479 8485.665 C-7757.7578 8485.4297 -7757.2949 8485.3594 -7757.1665 8485.1777 C-7756.7041 8485.4082 -7756.1104 8485.1563 -7755.7007 8484.9512 C-7755.6846 8485.1543 L-7755.2705 8484.7734 -7754.7759 8485.1074 -7754.2598 8485.1689 C-7754.2007 8485.2529 -7754.1074 8485.4434 -7753.9536 8485.4209 C-7753.6738 8485.0938 -7753.5273 8485.1162 -7753.1167 8484.9121 C-7752.8169 8484.9121 -7752.3301 8484.9932 -7752.0254 8485.1201 C-7750.8975 8484.6602 -7749.7456 8484.9551 -7748.5732 8484.6777 C-7748.4888 8484.916 L-7747.3521 8484.4063 -7745.9541 8484.8682 -7744.9839 8484.6074 C-7745.0776 8485.0146 L-7744.7734 8485.1387 -7744.3843 8484.9082 -7744.4619 8484.6191 C-7744.1567 8484.7441 -7743.7007 8484.4209 -7743.5068 8484.7568 C-7743.1953 8484.832 -7743.1255 8484.5674 -7742.8662 8484.5137 C-7742.2422 8484.668 -7742.0107 8484.6328 -7741.4224 8484.5566 C-7741.5684 8484.5313 L-7741.6328 8484.6201 -7741.6387 8484.793 -7741.4922 8484.8193 C-7741.2725 8484.7061 -7740.6846 8484.9297 -7740.9033 8484.4434 C-7740.2754 8484.7227 -7739.4385 8484.2139 -7738.8271 8484.5938 C-7738.8789 8484.4609 -7738.7246 8484.4346 -7738.6602 8484.3457 C-7738.1089 8484.3398 -7737.5293 8484.6113 -7737.0898 8484.3848 C-7737.0024 8484.4512 -7737.2295 8484.6113 -7737.0049 8484.625 C-7736.8721 8484.5723 -7737.0024 8484.4512 -7736.8384 8484.377 C-7735.9453 8484.1289 -7735.0303 8484.6328 -7734.2188 8484.5674 C-7732.7754 8484.3105 -7731.2695 8484.4414 -7729.8867 8484.3984 C-7729.9023 8484.4961 L-7729.4395 8484.123 -7728.8159 8484.877 -7728.4463 8484.3164 C-7728.3369 8484.4092 -7728.0283 8484.3594 -7728.1094 8484.5488 C-7727.7407 8484.2842 -7727.0771 8484.7969 -7726.5439 8484.4609 C-7726.5928 8484.4521 -7726.6211 8484.4727 -7726.6777 8484.5146 C-7726.1392 8484.7305 -7725.6641 8484.4346 -7725.0957 8484.6309 C-7725.1533 8484.6729 -7725.2583 8484.7031 -7725.2754 8484.8008 C-7725.0557 8484.9873 -7724.7549 8484.3887 -7724.6348 8484.8594 C-7724.5088 8484.8555 -7724.5449 8484.623 -7724.6221 8484.6367 C-7723.3779 8484.8193 -7722.0498 8484.5186 -7720.7549 8484.4121 C-7719.8271 8484.6934 -7720.6982 8485.2041 -7719.9663 8484.8535 C-7719.9063 8484.9434 -7719.9229 8484.6738 -7719.9131 8484.7705 C-7719.6299 8484.6396 -7719.4717 8485.2969 -7719.2754 8485.0508 C-7719.3564 8484.7617 -7719.1445 8484.8887 -7719.1387 8484.7129 C-7718.5713 8484.9004 -7718.4575 8485.1602 -7718.0098 8484.9414 C-7718.0435 8485.0938 L-7717.5186 8484.6641 -7716.9102 8484.8945 -7716.4673 8484.3984 C-7713.5728 8484.3066 -7710.7983 8484.0332 -7707.9761 8483.9756 C-7705.1865 8484.0703 -7702.4551 8483.8477 -7699.6221 8484.1113 C-7698.9585 8484.5098 -7698.9087 8484.5 -7698.1797 8484.3369 C-7698.2095 8484.4023 -7698.2549 8484.418 -7698.2061 8484.4785 C-7698.1699 8484.1504 -7697.6929 8484.4473 -7697.6235 8484.1338 C-7696.5762 8484.1953 -7695.6113 8484.1055 -7694.5337 8484.1025 C-7694.7041 8484.1387 -7694.7896 8484.4063 -7694.5869 8484.3848 C-7694.3755 8484.1738 L-7694.3408 8484.2666 L-7694.2021 8484.2188 -7694.0513 8484.0566 -7694.1943 8483.9512 C-7691.4873 8483.668 -7688.8242 8484.3242 -7686.1729 8484.2441 C-7685.5439 8484.3818 -7684.6475 8484.2568 -7683.9629 8484.1895 C-7681.9355 8484.626 -7680.1084 8484.9785 -7678.0479 8484.6738 C-7678.3174 8485.5215 -7679.1675 8485.7168 Vf-7769.2578 8485.5176 m-7769.1855 8485.6816 -7768.9497 8485.7705 -7769.1377 8485.9893 C-7769.1611 8485.8359 -7769.2822 8485.6641 -7769.2578 8485.5176 Cf-7762.9619 8487.2041 m-7762.9536 8487.1563 -7762.8721 8487.2705 -7762.8521 8487.2979 C-7762.9297 8487.3105 -7763.0024 8487.4482 -7763.0645 8487.3633 C-7762.9854 8487.3516 -7762.9976 8487.2734 -7762.9619 8487.2041 Cf-7761.3521 8487.3018 m-7761.3765 8487.4482 -7761.7207 8487.5645 -7761.9238 8487.582 C-7761.3521 8487.3018 Lf-7759.8521 8487.9033 m-7759.7227 8488.0273 -7759.7583 8488.0938 -7759.9326 8488.0908 C-7759.9453 8488.0137 -7759.8877 8487.9746 -7759.8521 8487.9033 Cf-7759.7456 8487.5723 m-7759.6211 8487.5674 -7759.5591 8487.6543 -7759.4985 8487.7383 C-7759.5029 8487.6113 -7759.7871 8487.8154 -7759.7456 8487.5723 Cf-7756.4893 8487.9961 m-7756.4111 8487.9834 -7756.2417 8487.8633 -7756.1689 8488.0254 C-7756.2505 8487.9121 -7756.5498 8488.21 -7756.4893 8487.9961 Cf-7754.9761 8487.7754 m-7754.9272 8487.7852 -7754.9072 8487.8105 -7754.8506 8487.7705 C-7754.7607 8487.8369 -7754.8555 8487.9434 -7754.9312 8487.958 C-7754.9761 8487.7754 Lf-7727.4287 8487.1895 m-7727.5923 8487.2617 L-7727.5684 8487.1162 L-7727.4287 8487.1895 Lf-7715.3574 8487.1816 m-7715.1943 8487.0898 -7715.2441 8487.3184 -7715.2168 8487.3398 C-7715.3643 8487.3555 -7715.1621 8487.1602 -7715.3574 8487.1816 Cf-7708.8486 8486.4521 m-7708.8984 8486.457 L-7708.8818 8486.1563 L-7708.8486 8486.4521 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Offset Squares Pattern)PcBb2 (New Gradient Swatch 3) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(New Gradient Swatch 3)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(R=241 G=241  B=242)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(Layer 2) Ln0 A1 Ap0 O0 0 0 0 1 1 1 Xa0 J 0 j 1 w 4 M []0 d0 XR841.8838 -39.2334 m0 -39.2334 L0 634.2754 L841.8838 634.2754 L841.8838 -39.2334 Lfu603.5889 143.7344 m594.0049 126.877 575.3838 120.9961 559.2627 112.3691 c558.2139 111.8154 557.1572 111.2578 556.0928 110.6973 c501.8389 82.0713 429.3643 43.833 Y429.3643 -39.2334 L841.8896 -39.2334 L841.8896 43.833 L697.3193 124.0381 696.3096 124.5977 v682.6377 133.3242 667.3877 143.5605 652.8857 143.9033 c652.5596 143.9111 652.2178 144.0566 651.8623 144.0195 c650.2119 143.8477 619.9736 143.0469 606.3291 143.7344 c604.6162 143.7393 603.5889 143.7344 YBb1 (Unnamed gradient 36) 635.627 166.3467 -90 170.1415 1 0 0 1 0 0 Bg-0.000007 -170.1415 -416.5254 0.000018 843.8896 166.3467 Xm-0.000367 -8386.3369 -416.5254 0.000018 843.8896 8552.6836 Bc-0.000007 -170.1415 -416.5254 0.000018 843.8896 166.3467 Bm-0.000367 -8386.3369 -416.5254 0.000018 843.8896 -3.79492 Bcf0 BBu429.3643 55.6934 m501.5479 89.2891 555.585 114.4375 v556.6455 114.9316 557.6982 115.4209 558.7432 115.9072 c574.8945 122.957 592.8096 128.5352 603.5908 143.7246 C601.4004 143.7773 L592.9629 135.0293 582.3037 130.9023 571.1641 126.8994 c564.835 124.625 558.2568 122.29 552.4238 119.6836 c551.333 119.252 550.2354 118.8164 549.1318 118.3789 c497.1924 97.7871 429.3643 70.8945 Y429.3643 55.6934 LBb1 (Unnamed gradient 36) -622.1318 99.7354 0 174.2266 1 0 0 1 1051.4961 0 Bg174.2266 0 0 -92.084 429.3643 145.7773 Xm7150.8682 0 0 -92.084 -6721.5039 145.7773 Bc174.2266 0 0 -92.084 429.3643 145.7773 Bm7150.8682 0 0 -92.084 603.5908 145.7773 Bcf0 BB841.8896 55.6934 m750.8623 100.252 699.9932 125.1514 v698.9521 125.6602 697.9287 126.1592 696.9229 126.6504 c682.6943 134.7168 667.9951 141.5762 651.8252 144.0264 C668.9736 146.4766 688.3232 135.874 700.1094 130.374 c711.8955 124.874 841.8896 70.8945 Y841.8896 55.6934 LBb1 (Unnamed gradient 36) -525.749 100.041 0 190.0645 -1 0 0 1 15856.1406 0 Bg-190.0645 0 0 -94.7832 841.8896 148.4766 Xm-7247.2515 0 0 -94.7832 8089.1406 148.4766 Bc-190.0645 0 0 -94.7832 841.8896 148.4766 Bm-7247.2515 0 0 -94.7832 651.8252 148.4766 Bcf0 BB0 0 0 0 1 1 1 Xa841.8896 43.833 m841.8896 55.6934 L721.0098 114.3105 699.4365 125.8086 v677.8633 137.3066 669.0127 142.5215 651.8623 143.9912 C668.5225 141.0508 687.0439 129.9863 696.3096 124.5977 c705.5752 119.209 841.8896 43.833 Yf429.3643 43.833 m429.3643 55.6934 L501.5479 89.2891 555.585 114.4375 v556.6455 114.9316 557.6982 115.4209 558.7432 115.9072 c569.0576 120.8594 580.7412 124.2578 590.207 130.707 C594.2158 133.4375 602.7021 142.4873 603.6055 143.7246 C602.8252 142.416 602.1338 141.3398 601.3604 140.1777 c600.585 139.0156 598.6494 136.6367 597.0479 135.0293 C590.6025 128.0391 581.998 123.5488 573.4502 119.4316 c568.5479 117.0713 559.2627 112.3691 y557.1572 111.2578 556.0928 110.6973 v501.8389 82.0713 429.3643 43.833 YfUu0 Ap784.209 37.9736 m753.875 37.9736 l833.3398 -39.2334 l779.9238 -39.2334 l717.9336 37.9736 l686.2783 37.9736 l704.4141 70.2881 l784.209 37.9736 lf497.2832 44.2227 m526.166 44.2227 l553.1953 69.4004 l553.1973 69.4004 577.6348 69.4004 y558.3789 44.2227 l588.7422 44.2227 l497.6543 -7.9873 l497.2832 44.2227 lf1 g590.6885 119.6104 m599.9463 119.6104 l603.7607 122.7695 l611.5713 122.6875 l608.6104 119.6104 l617.8105 119.6104 l600.7959 115.4072 l590.6885 119.6104 lf654.1514 118.4238 m661.6982 118.4238 l666.4756 113.7813 l677.7939 113.7813 l673.5557 118.4238 l681.7139 118.4238 l664.9326 123.2754 l654.1514 118.4238 lfu639.9482 120.791 m634.6045 120.791 L633.5547 105.082 L640.6826 105.082 L639.9482 120.791 Lf623.8945 -39.2334 m647.415 -39.2334 L645.6494 -1.40234 L626.4268 -1.40234 L623.8945 -39.2334 Lf639.2939 134.8291 m635.5459 134.8291 L634.9795 126.3818 L639.6885 126.3818 L639.2939 134.8291 Lf641.0166 97.8906 m633.0732 97.8906 L631.1904 69.7598 L642.3291 69.7598 L641.0166 97.8906 Lf638.8906 143.666 m636.125 143.6191 L635.8428 139.2734 L639.0869 139.2734 L638.8906 143.666 Lf642.7822 60.0605 m630.54 60.0605 L627.3643 12.6182 L644.9951 12.6182 L642.7822 60.0605 LfUUUu1 Ap0.658823 0.615686 0.623529 0.517647 0.243137 0.231373 0.223529 Xa0 -39.21 m321.3184 -39.21 L269.8408 97.3154 266.127 102.0215 v263.9019 104.8408 262.8076 108.0635 264.2012 108.7285 c265.5957 109.3926 295.3037 112.2881 y248.333 113.1641 245.4717 107.6846 V244.7256 107.4639 244.3691 107.1699 244.1006 107.8379 C244.3564 108.9268 245.792 112.5508 246.0488 118.5068 C246.1123 118.5068 245.1514 118.6982 V243.6787 116.6494 242.4619 113.0635 237.6602 111.335 C229.0791 106.7236 174.752 95.2998 147 89.6631 c119.2476 84.0254 0.121094 61.4766 y0 -39.21 lfu54.4155 72.8955 m57.5469 73.8438 L57.5469 87.3232 L54.4155 87.3232 L54.4155 72.8955 LBb1 (Unnamed gradient 15) 1195.3555 80.1094 0 3.13086 -1 0 0 1 16792.9023 0 Bg-3.13086 0 0 -18.4277 57.5469 89.3232 Xm-8968.3555 0 0 -18.4277 9025.9023 89.3232 Bc-3.13086 0 0 -18.4277 57.5469 89.3232 Bm-8968.3555 0 0 -18.4277 54.416 89.3232 Bcf0 BB98.1865 81.9873 m100.9385 82.6807 L100.9385 93.1689 L98.1865 93.1689 L98.1865 81.9873 LBb1 (Unnamed gradient 15) 1151.9639 87.5781 0 2.75195 -1 0 0 1 16792.9023 0 Bg-2.75195 0 0 -15.1816 100.9385 95.1689 Xm-8924.9639 0 0 -15.1816 9025.9023 95.1689 Bc-2.75195 0 0 -15.1816 100.9385 95.1689 Bm-8924.9639 0 0 -15.1816 98.1865 95.1689 Bcf0 BB127.0469 88.0195 m129.041 88.6309 L128.8604 96.6064 L126.8667 96.6064 L127.0469 88.0195 LBb1 (Unnamed gradient 15) 1123.8613 92.3125 0 2.17383 -1 0 0 1 16792.9023 0 Bg-2.17383 0 0 -12.5869 129.041 98.6064 Xm-8896.8613 0 0 -12.5869 9025.9023 98.6064 Bc-2.17383 0 0 -12.5869 129.041 98.6064 Bm-8896.8613 0 0 -12.5869 126.8672 98.6064 Bcf0 BB147.4961 91.2402 m149.0151 91.7695 L149.0327 99.4941 L147.4517 99.3076 L147.4961 91.2402 LBb1 (Unnamed gradient 15) 1103.8691 95.3672 0 1.58203 -1 0 0 1 16792.9023 0 Bg-1.58203 0 0 -12.2539 149.0332 101.4941 Xm-8876.8691 0 0 -12.2539 9025.9023 101.4941 Bc-1.58203 0 0 -12.2539 149.0332 101.4941 Bm-8876.8691 0 0 -12.2539 147.4512 101.4941 Bcf0 BB161.1699 93.9092 m162.6533 94.708 L162.6494 101.7979 L161.1543 102.1719 L161.1699 93.9092 LBb1 (Unnamed gradient 15) 1090.249 98.041 0 1.49902 -1 0 0 1 16792.9023 0 Bg-1.49902 0 0 -12.2627 162.6533 104.1719 Xm-8863.249 0 0 -12.2627 9025.9023 104.1719 Bc-1.49902 0 0 -12.2627 162.6533 104.1719 Bm-8863.249 0 0 -12.2627 161.1543 104.1719 Bcf0 BB172.3662 96.0684 m173.4868 96.3174 L173.4722 103.6172 L172.333 103.6172 L172.3662 96.0684 LBb1 (Unnamed gradient 15) 1079.416 99.8428 0 1.15332 -1 0 0 1 16792.9023 0 Bg-1.15332 0 0 -11.5488 173.4863 105.6172 Xm-8852.416 0 0 -11.5488 9025.9023 105.6172 Bc-1.15332 0 0 -11.5488 173.4863 105.6172 Bm-8852.416 0 0 -11.5488 172.333 105.6172 Bcf0 BB180.0371 97.1982 m181.1758 97.6914 L181.126 105.1104 L179.9863 105.1104 L180.0371 97.1982 LBb1 (Unnamed gradient 15) 1071.7266 101.1543 0 1.18945 -1 0 0 1 16792.9023 0 Bg-1.18945 0 0 -11.9121 181.1758 107.1104 Xm-8844.7266 0 0 -11.9121 9025.9023 107.1104 Bc-1.18945 0 0 -11.9121 181.1758 107.1104 Bm-8844.7266 0 0 -11.9121 179.9863 107.1104 Bcf0 BB186.0508 98.752 m187.1899 99.2451 L187.1924 106.6973 L186.0532 106.6973 L186.0508 98.752 LBb1 (Unnamed gradient 15) 1065.71 102.7246 0 1.1416 -1 0 0 1 16792.9023 0 Bg-1.1416 0 0 -11.9453 187.1924 108.6973 Xm-8838.71 0 0 -11.9453 9025.9023 108.6973 Bc-1.1416 0 0 -11.9453 187.1924 108.6973 Bm-8838.71 0 0 -11.9453 186.0508 108.6973 Bcf0 BB190.9268 99.7861 m191.9238 99.9922 L191.9004 107.0889 L190.9038 107.0889 L190.9268 99.7861 LBb1 (Unnamed gradient 15) 1060.9785 103.4375 0 1.01953 -1 0 0 1 16792.9023 0 Bg-1.01953 0 0 -11.3027 191.9238 109.0889 Xm-8833.9785 0 0 -11.3027 9025.9023 109.0889 Bc-1.01953 0 0 -11.3027 191.9238 109.0889 Bm-8833.9785 0 0 -11.3027 190.9043 109.0889 Bcf0 BB194.4775 100.5342 m195.4741 100.9268 L195.4121 106.6982 L194.415 106.6982 L194.4775 100.5342 LBb1 (Unnamed gradient 15) 1057.4277 103.6162 0 1.05957 -1 0 0 1 16792.9023 0 Bg-1.05957 0 0 -10.1641 195.4746 108.6982 Xm-8830.4277 0 0 -10.1641 9025.9023 108.6982 Bc-1.05957 0 0 -10.1641 195.4746 108.6982 Bm-8830.4277 0 0 -10.1641 194.415 108.6982 Bcf0 BB197.9653 101.4063 m198.9619 101.7979 L198.9009 108.0225 L197.9043 108.0225 L197.9653 101.4063 LBb1 (Unnamed gradient 15) 1053.9404 104.7148 0 1.05762 -1 0 0 1 16792.9023 0 Bg-1.05762 0 0 -10.6162 198.9619 110.0225 Xm-8826.9404 0 0 -10.6162 9025.9023 110.0225 Bc-1.05762 0 0 -10.6162 198.9619 110.0225 Bm-8826.9404 0 0 -10.6162 197.9043 110.0225 Bcf0 BB203.9448 102.5273 m204.9414 102.9199 L204.937 109.3301 L203.9404 109.3301 L203.9448 102.5273 LBb1 (Unnamed gradient 15) 1047.9609 105.9287 0 1.00098 -1 0 0 1 16792.9023 0 Bg-1.00098 0 0 -10.8027 204.9414 111.3301 Xm-8820.9609 0 0 -10.8027 9025.9023 111.3301 Bc-1.00098 0 0 -10.8027 204.9414 111.3301 Bm-8820.9609 0 0 -10.8027 203.9404 111.3301 Bcf0 BB201.0801 102.0293 m202.0762 102.4209 L202.0742 108.832 L201.0776 108.832 L201.0801 102.0293 LBb1 (Unnamed gradient 15) 1050.8262 105.4307 0 0.998047 -1 0 0 1 16792.9023 0 Bg-0.998047 0 0 -10.8027 202.0762 110.832 Xm-8823.8262 0 0 -10.8027 9025.9023 110.832 Bc-0.998047 0 0 -10.8027 202.0762 110.832 Bm-8823.8262 0 0 -10.8027 201.0781 110.832 Bcf0 BB206.7471 103.4014 m207.6201 103.7295 L207.5869 109.2168 L206.7148 109.2168 L206.7471 103.4014 LBb1 (Unnamed gradient 15) 1045.2822 106.3086 0 0.905273 -1 0 0 1 16792.9023 0 Bg-0.905273 0 0 -9.81543 207.6201 111.2168 Xm-8818.2822 0 0 -9.81543 9025.9023 111.2168 Bc-0.905273 0 0 -9.81543 207.6201 111.2168 Bm-8818.2822 0 0 -9.81543 206.7148 111.2168 Bcf0 BB212.415 104.6475 m213.2881 104.9756 L213.2881 109.584 L212.415 109.584 L212.415 104.6475 LBb1 (Unnamed gradient 15) 1039.6143 107.1152 0 0.873047 -1 0 0 1 16792.9023 0 Bg-0.873047 0 0 -8.93652 213.2881 111.584 Xm-8812.6143 0 0 -8.93652 9025.9023 111.584 Bc-0.873047 0 0 -8.93652 213.2881 111.584 Bm-8812.6143 0 0 -8.93652 212.415 111.584 Bcf0 BB209.6748 104.0244 m210.5479 104.3525 L210.5469 109.46 L209.6738 109.46 L209.6748 104.0244 LBb1 (Unnamed gradient 15) 1042.3545 106.7422 0 0.874023 -1 0 0 1 16792.9023 0 Bg-0.874023 0 0 -9.43555 210.5479 111.46 Xm-8815.3545 0 0 -9.43555 9025.9023 111.46 Bc-0.874023 0 0 -9.43555 210.5479 111.46 Bm-8815.3545 0 0 -9.43555 209.6738 111.46 Bcf0 BB223.3916 107.7139 m224.125 107.9648 L224.125 111.3467 L223.3916 111.4238 L223.3916 107.7139 LBb1 (Unnamed gradient 15) 1028.7773 109.5684 0 0.733398 -1 0 0 1 16792.9023 0 Bg-0.733398 0 0 -7.70996 224.125 113.4238 Xm-8801.7773 0 0 -7.70996 9025.9023 113.4238 Bc-0.733398 0 0 -7.70996 224.125 113.4238 Bm-8801.7773 0 0 -7.70996 223.3916 113.4238 Bcf0 BB225.2598 108.2734 m225.9941 108.5244 L225.9941 111.9072 L225.2598 111.9844 L225.2598 108.2734 LBb1 (Unnamed gradient 15) 1026.9082 110.1289 0 0.734375 -1 0 0 1 16792.9023 0 Bg-0.734375 0 0 -7.71094 225.9941 113.9844 Xm-8799.9082 0 0 -7.71094 9025.9023 113.9844 Bc-0.734375 0 0 -7.71094 225.9941 113.9844 Bm-8799.9082 0 0 -7.71094 225.2598 113.9844 Bcf0 BB226.8174 108.585 m227.5508 108.8369 L227.5508 111.9512 L226.8174 112.0283 L226.8174 108.585 LBb1 (Unnamed gradient 15) 1025.3516 110.3066 0 0.733398 -1 0 0 1 16792.9023 0 Bg-0.733398 0 0 -7.44336 227.5508 114.0283 Xm-8798.3516 0 0 -7.44336 9025.9023 114.0283 Bc-0.733398 0 0 -7.44336 227.5508 114.0283 Bm-8798.3516 0 0 -7.44336 226.8174 114.0283 Bcf0 BB228.4365 109.1455 m229.1709 109.3975 L229.1709 112.5117 L228.4365 112.5889 L228.4365 109.1455 LBb1 (Unnamed gradient 15) 1023.7314 110.8672 0 0.734375 -1 0 0 1 16792.9023 0 Bg-0.734375 0 0 -7.44336 229.1709 114.5889 Xm-8796.7314 0 0 -7.44336 9025.9023 114.5889 Bc-0.734375 0 0 -7.44336 229.1709 114.5889 Bm-8796.7314 0 0 -7.44336 228.4365 114.5889 Bcf0 BB229.9307 109.5195 m230.665 109.7705 L230.665 112.8857 L229.9307 112.9629 L229.9307 109.5195 LBb1 (Unnamed gradient 15) 1022.2373 111.2412 0 0.734375 -1 0 0 1 16792.9023 0 Bg-0.734375 0 0 -7.44336 230.665 114.9629 Xm-8795.2373 0 0 -7.44336 9025.9023 114.9629 Bc-0.734375 0 0 -7.44336 230.665 114.9629 Bm-8795.2373 0 0 -7.44336 229.9307 114.9629 Bcf0 BB231.4258 110.0186 m231.9736 110.2695 L231.9736 112.7607 L231.4258 112.8379 L231.4258 110.0186 LBb1 (Unnamed gradient 15) 1020.9287 111.4277 0 0.547852 -1 0 0 1 16792.9023 0 Bg-0.547852 0 0 -6.81934 231.9736 114.8379 Xm-8793.9287 0 0 -6.81934 9025.9023 114.8379 Bc-0.547852 0 0 -6.81934 231.9736 114.8379 Bm-8793.9287 0 0 -6.81934 231.4258 114.8379 Bcf0 BB232.5469 110.1426 m233.0947 110.3936 L233.0947 112.8857 L232.5469 112.9629 L232.5469 110.1426 LBb1 (Unnamed gradient 15) 1019.8076 111.5527 0 0.547852 -1 0 0 1 16792.9023 0 Bg-0.547852 0 0 -6.82031 233.0947 114.9629 Xm-8792.8076 0 0 -6.82031 9025.9023 114.9629 Bc-0.547852 0 0 -6.82031 233.0947 114.9629 Bm-8792.8076 0 0 -6.82031 232.5469 114.9629 Bcf0 BB233.7549 110.6035 m234.3027 110.8545 L234.3027 113.3467 L233.7549 113.4229 L233.7549 110.6035 LBb1 (Unnamed gradient 15) 1018.5996 112.0137 0 0.547852 -1 0 0 1 16792.9023 0 Bg-0.547852 0 0 -6.81934 234.3027 115.4229 Xm-8791.5996 0 0 -6.81934 9025.9023 115.4229 Bc-0.547852 0 0 -6.81934 234.3027 115.4229 Bm-8791.5996 0 0 -6.81934 233.7549 115.4229 Bcf0 BB235.001 111.0771 m235.5479 111.3281 L235.5479 113.1348 L235.001 113.2119 L235.001 111.0771 LBb1 (Unnamed gradient 15) 1017.3545 112.1445 0 0.546875 -1 0 0 1 16792.9023 0 Bg-0.546875 0 0 -6.13477 235.5479 115.2119 Xm-8790.3545 0 0 -6.13477 9025.9023 115.2119 Bc-0.546875 0 0 -6.13477 235.5479 115.2119 Bm-8790.3545 0 0 -6.13477 235.001 115.2119 Bcf0 BB236.1221 111.5127 m236.6689 111.7637 L236.6689 113.5703 L236.1221 113.6475 L236.1221 111.5127 LBb1 (Unnamed gradient 15) 1016.2334 112.5801 0 0.546875 -1 0 0 1 16792.9023 0 Bg-0.546875 0 0 -6.13477 236.6689 115.6475 Xm-8789.2334 0 0 -6.13477 9025.9023 115.6475 Bc-0.546875 0 0 -6.13477 236.6689 115.6475 Bm-8789.2334 0 0 -6.13477 236.1221 115.6475 Bcf0 BB237.1807 111.9482 m237.7275 112.2002 L237.7275 114.0068 L237.1807 114.083 L237.1807 111.9482 LBb1 (Unnamed gradient 15) 1015.1748 113.0156 0 0.546875 -1 0 0 1 16792.9023 0 Bg-0.546875 0 0 -6.13477 237.7275 116.083 Xm-8788.1748 0 0 -6.13477 9025.9023 116.083 Bc-0.546875 0 0 -6.13477 237.7275 116.083 Bm-8788.1748 0 0 -6.13477 237.1807 116.083 Bcf0 BB238.3018 112.3223 m238.8486 112.5732 L238.8486 114.3799 L238.3018 114.457 L238.3018 112.3223 LBb1 (Unnamed gradient 15) 1014.0537 113.3896 0 0.546875 -1 0 0 1 16792.9023 0 Bg-0.546875 0 0 -6.13477 238.8486 116.457 Xm-8787.0537 0 0 -6.13477 9025.9023 116.457 Bc-0.546875 0 0 -6.13477 238.8486 116.457 Bm-8787.0537 0 0 -6.13477 238.3018 116.457 Bcf0 BB239.2363 112.6904 m239.6777 113.1162 L239.6777 114.6914 L239.2363 114.5947 L239.2363 112.6904 LBb1 (Unnamed gradient 15) 1013.2246 113.6914 0 0.441406 -1 0 0 1 16792.9023 0 Bg-0.441406 0 0 -6.00098 239.6777 116.6914 Xm-8786.2246 0 0 -6.00098 9025.9023 116.6914 Bc-0.441406 0 0 -6.00098 239.6777 116.6914 Bm-8786.2246 0 0 -6.00098 239.2363 116.6914 Bcf0 BB240.1084 113.251 m240.5498 113.6768 L240.5498 115.2529 L240.1084 115.1553 L240.1084 113.251 LBb1 (Unnamed gradient 15) 1012.3525 114.252 0 0.441406 -1 0 0 1 16792.9023 0 Bg-0.441406 0 0 -6.00195 240.5498 117.2529 Xm-8785.3525 0 0 -6.00195 9025.9023 117.2529 Bc-0.441406 0 0 -6.00195 240.5498 117.2529 Bm-8785.3525 0 0 -6.00195 240.1084 117.2529 Bcf0 BB240.8555 113.8115 m241.2979 114.2373 L241.2979 115.8135 L240.8555 115.7158 L240.8555 113.8115 LBb1 (Unnamed gradient 15) 1011.6045 114.8125 0 0.442383 -1 0 0 1 16792.9023 0 Bg-0.442383 0 0 -6.00195 241.2979 117.8135 Xm-8784.6045 0 0 -6.00195 9025.9023 117.8135 Bc-0.442383 0 0 -6.00195 241.2979 117.8135 Bm-8784.6045 0 0 -6.00195 240.8555 117.8135 Bcf0 BB241.665 114.3096 m242.1064 114.7354 L242.1064 116.3115 L241.665 116.2139 L241.665 114.3096 LBb1 (Unnamed gradient 15) 1010.7959 115.3105 0 0.441406 -1 0 0 1 16792.9023 0 Bg-0.441406 0 0 -6.00195 242.1064 118.3115 Xm-8783.7959 0 0 -6.00195 9025.9023 118.3115 Bc-0.441406 0 0 -6.00195 242.1064 118.3115 Bm-8783.7959 0 0 -6.00195 241.665 118.3115 Bcf0 BB242.4131 114.8896 m242.8545 115.3145 L242.8545 116.623 L242.4131 116.5254 L242.4131 114.8896 LBb1 (Unnamed gradient 15) 1010.0479 115.7559 0 0.441406 -1 0 0 1 16792.9023 0 Bg-0.441406 0 0 -5.7334 242.8545 118.623 Xm-8783.0479 0 0 -5.7334 9025.9023 118.623 Bc-0.441406 0 0 -5.7334 242.8545 118.623 Bm-8783.0479 0 0 -5.7334 242.4131 118.623 Bcf0 BB243.1602 115.5742 m243.6016 116 L243.6016 117.3076 L243.1602 117.2109 L243.1602 115.5742 LBb1 (Unnamed gradient 15) 1009.3008 116.4414 0 0.441406 -1 0 0 1 16792.9023 0 Bg-0.441406 0 0 -5.7334 243.6016 119.3076 Xm-8782.3008 0 0 -5.7334 9025.9023 119.3076 Bc-0.441406 0 0 -5.7334 243.6016 119.3076 Bm-8782.3008 0 0 -5.7334 243.1602 119.3076 Bcf0 BB215.5293 105.4561 m216.2773 105.9092 L216.2363 111.5508 L215.4873 111.4258 L215.5293 105.4561 LBb1 (Unnamed gradient 15) 1036.625 108.5039 0 0.790039 -1 0 0 1 16792.9023 0 Bg-0.790039 0 0 -10.0947 216.2773 113.5508 Xm-8809.625 0 0 -10.0947 9025.9023 113.5508 Bc-0.790039 0 0 -10.0947 216.2773 113.5508 Bm-8809.625 0 0 -10.0947 215.4873 113.5508 Bcf0 BB218.083 106.2207 m218.8936 106.5322 L218.9111 111.8623 L218.0381 111.8623 L218.083 106.2207 LBb1 (Unnamed gradient 15) 1033.9912 109.041 0 0.873047 -1 0 0 1 16792.9023 0 Bg-0.873047 0 0 -9.6416 218.9111 113.8623 Xm-8806.9912 0 0 -9.6416 9025.9023 113.8623 Bc-0.873047 0 0 -9.6416 218.9111 113.8623 Bm-8806.9912 0 0 -9.6416 218.0381 113.8623 Bcf0 BB220.9922 107.1221 m221.8213 107.5908 L221.8213 110.9736 L220.9922 110.833 L220.9922 107.1221 LBb1 (Unnamed gradient 15) 1031.0811 109.0479 0 0.829102 -1 0 0 1 16792.9023 0 Bg-0.829102 0 0 -7.85156 221.8213 112.9736 Xm-8804.0811 0 0 -7.85156 9025.9023 112.9736 Bc-0.829102 0 0 -7.85156 221.8213 112.9736 Bm-8804.0811 0 0 -7.85156 220.9922 112.9736 Bcf0 BBU0.8 g0.121094 65.8984 m127.1948 87.9492 175.2148 97.0957 v206.1787 102.9932 236.001 110.7637 239.54 113.2666 c243.0791 115.7705 243.166 116.4609 245.1514 118.6982 C243.6787 116.6494 242.4619 113.0635 237.6602 111.335 C229.0791 106.7236 174.752 95.2998 147 89.6631 c119.2476 84.0254 0.121094 61.4766 y0.121094 65.8984 lf356.3506 -39.21 m321.3184 -39.21 L282.9209 62.8096 270.0527 93.5068 v268.0317 98.3281 263.168 106.3145 263.1816 107.3145 c263.1924 108.04 263.6147 108.4482 264.2012 108.7285 c265.5957 109.3926 279.9258 110.7559 281.6768 110.8291 C277.2998 109.7344 266.332 105.9248 265.9424 106.1934 C270.5693 100.4336 356.3506 -39.21 Yf0.654902 0.513725 0.615686 0.329412 0.313726 0.341176 0.309804 Xa412.7354 49.7285 m412.7354 59.0391 L278.73 106.9209 277.5264 107.1582 275.7871 107.874 c283.3213 104.7754 282.4888 105.0527 412.7354 49.7285 Cf0.662745 0.592157 0.576471 0.403922 0.282353 0.282353 0.282353 Xa356.3506 -39.21 m395.4697 -39.21 L276.7397 96.6611 275.5728 97.5938 v274.4067 98.5273 267.1865 105.3369 265.9424 106.1934 C270.5693 100.4336 356.3506 -39.21 Yfu0 Ap0 0 0 0 1 1 1 Xa242.499 94.6318 m242.6484 95.3477 L238.4482 95.4258 L238.0928 94.6846 L242.499 94.6318 Lf183.3916 -25.377 m177.0884 -39.2109 L211.4736 -39.21 L214.4619 -26.2998 L183.3916 -25.377 Lf243.6338 99.7344 m240.3896 99.7217 L240.083 98.958 L243.4424 98.9678 L243.6338 99.7344 Lf243.8418 100.5088 m240.7393 100.4795 L240.501 99.9717 L243.6631 99.9717 L243.8418 100.5088 Lf243.3945 98.6592 m239.9629 98.7197 L239.5996 98.0098 L243.2148 98.0098 L243.3945 98.6592 Lf242.9277 96.6572 m239.001 96.6572 L238.6504 95.7656 L242.71 95.7188 L242.9277 96.6572 Lf243.1719 97.7471 m239.5156 97.7344 L239.1279 96.9287 L243.0059 96.9287 L243.1719 97.7471 Lf243.9912 101.2549 m241.127 101.2246 L240.8291 100.7178 L243.8525 100.7178 L243.9912 101.2549 Lf244.8584 104.9814 m242.8359 104.9814 L242.5313 104.4248 L244.7178 104.4248 L244.8584 104.9814 Lf244.998 105.6855 m243.1416 105.6855 L242.8662 105.1602 L244.8877 105.1602 L244.998 105.6855 Lf244.6465 104.1494 m242.4092 104.1787 L242.1963 103.6904 L244.5479 103.6904 L244.6465 104.1494 Lf244.3184 102.6865 m241.7832 102.7168 L241.5859 102.2793 L244.2666 102.2793 L244.3184 102.6865 Lf244.1699 102.0303 m241.4854 102.0303 L241.2217 101.4854 L244.0674 101.4854 L244.1699 102.0303 Lf244.5273 103.4619 m242.1709 103.4922 L241.8613 102.9551 L244.377 102.9551 L244.5273 103.4619 Lf192.9912 -4.61328 m219.165 -5.97656 L223.4131 12.376 L200.8672 12.9795 L192.9912 -4.61328 Lf219.3467 53.5381 m232.6943 52.4775 L233.8789 57.5938 L221.4297 58.1094 L219.3467 53.5381 Lf245.168 106.332 m243.4756 106.332 L243.2012 105.8955 L245.0576 105.8955 L245.168 106.332 Lf237.9189 75.0488 m229.2803 75.3408 L228.165 72.8926 L237.2744 72.2656 L237.9189 75.0488 Lf239.1621 80.4229 m231.71 80.6748 L230.7607 78.5898 L238.6826 78.3496 L239.1621 80.4229 Lf245.4717 107.6846 m244.0664 107.7949 L243.8711 107.3652 L245.3975 107.3652 L245.4717 107.6846 Lf245.3379 107.126 m243.8115 107.126 L243.5361 106.6299 L245.2275 106.6299 L245.3379 107.126 Lf242.3594 94.2373 m237.9346 94.335 L237.3379 93.0254 L242.0625 92.9541 L242.3594 94.2373 Lf226.0811 68.3193 m224.6992 65.2881 L235.4873 64.541 L236.2637 67.8975 L226.0811 68.3193 Lf240.0879 84.4219 m233.5186 84.6436 L232.7549 82.9678 L239.668 82.6084 L240.0879 84.4219 Lf240.8076 87.5313 m234.8945 87.6631 L234.335 86.4365 L240.501 86.209 L240.8076 87.5313 Lf241.9014 92.2588 m237.0381 92.3672 L236.4561 91.0908 L241.6172 91.0283 L241.9014 92.2588 Lf241.375 89.9834 m236.0059 90.1025 L235.5645 89.1338 L241.0928 88.7646 L241.375 89.9834 Lf210.6748 34.5068 m228.1104 32.6709 L230.1729 41.583 L215.166 43.3047 L210.6748 34.5068 LfUu1 Ap390.585 64.9482 m387.4541 65.8975 L387.4541 79.376 L390.585 79.376 L390.585 64.9482 LBb1 (Unnamed gradient 15) 387.4541 72.1621 0 3.13086 1 0 0 1 0 0 Bg3.13086 0 0 -18.4277 387.4541 81.376 Xm8160.4541 0 0 -18.4277 -7773 81.376 Bc3.13086 0 0 -18.4277 387.4541 81.376 Bm8160.4541 0 0 -18.4277 390.585 81.376 Bcf0 BB366.96 74.1719 m364.207 74.8652 L364.207 85.3535 L366.96 85.3535 L366.96 74.1719 LBb1 (Unnamed gradient 15) 364.207 79.7627 0 2.75293 1 0 0 1 0 0 Bg2.75293 0 0 -15.1816 364.207 87.3535 Xm8137.207 0 0 -15.1816 -7773 87.3535 Bc2.75293 0 0 -15.1816 364.207 87.3535 Bm8137.207 0 0 -15.1816 366.96 87.3535 Bcf0 BB350.458 80.1826 m348.4658 80.7939 L348.6455 88.7695 L350.6396 88.7695 L350.458 80.1826 LBb1 (Unnamed gradient 15) 348.4658 84.4766 0 2.17383 1 0 0 1 0 0 Bg2.17383 0 0 -12.5869 348.4658 90.7695 Xm8121.4658 0 0 -12.5869 -7773 90.7695 Bc2.17383 0 0 -12.5869 348.4658 90.7695 Bm8121.4658 0 0 -12.5869 350.6396 90.7695 Bcf0 BB338.0186 84.7842 m336.501 85.3135 L336.501 91.332 L338.0186 91.332 L338.0186 84.7842 LBb1 (Unnamed gradient 15) 336.501 88.0586 0 1.51758 1 0 0 1 0 0 Bg1.51758 0 0 -10.5479 336.501 93.332 Xm8109.501 0 0 -10.5479 -7773 93.332 Bc1.51758 0 0 -10.5479 336.501 93.332 Bm8109.501 0 0 -10.5479 338.0186 93.332 Bcf0 BB328.8154 87.9434 m327.6768 88.4365 L327.6768 94.2734 L328.8154 94.2734 L328.8154 87.9434 LBb1 (Unnamed gradient 15) 327.6768 91.1084 0 1.13867 1 0 0 1 0 0 Bg1.13867 0 0 -10.3301 327.6768 96.2734 Xm8100.6768 0 0 -10.3301 -7773 96.2734 Bc1.13867 0 0 -10.3301 327.6768 96.2734 Bm8100.6768 0 0 -10.3301 328.8154 96.2734 Bcf0 BB321.8174 90.5967 m320.8213 90.9893 L320.8213 95.4121 L321.8174 95.4121 L321.8174 90.5967 LBb1 (Unnamed gradient 15) 320.8213 93.0039 0 0.996094 1 0 0 1 0 0 Bg0.996094 0 0 -8.81543 320.8213 97.4121 Xm8093.8213 0 0 -8.81543 -7773 97.4121 Bc0.996094 0 0 -8.81543 320.8213 97.4121 Bm8093.8213 0 0 -8.81543 321.8174 97.4121 Bcf0 BB316.1572 92.7451 m315.2861 93.0732 L315.2861 96.4551 L316.1572 96.4551 L316.1572 92.7451 LBb1 (Unnamed gradient 15) 315.2861 94.5996 0 0.871094 1 0 0 1 0 0 Bg0.871094 0 0 -7.70996 315.2861 98.4551 Xm8088.2856 0 0 -7.70996 -7772.9995 98.4551 Bc0.871094 0 0 -7.70996 315.2861 98.4551 Bm8088.2856 0 0 -7.70996 316.1572 98.4551 Bcf0 BBUu0 Ap0.552941 0.431373 0.505882 0.117647 0.458824 0.478431 0.45098 Xa412.6475 74.5547 m412.6475 72.2813 l313.8477 95.8682 l313.4795 96.165 313.5342 96.3525 v313.5869 96.54 313.7793 96.6328 y412.6475 74.5547 lf0.666667 0.584314 0.670588 0.552941 0.223529 0.227451 0.2 Xa412.6475 72.8545 m412.6475 72.2813 l313.8477 95.8682 l313.626 96.0479 313.5518 96.2158 v313.5303 96.2637 412.6475 72.8545 yf0.694118 0.619608 0.627451 0.572549 0.203922 0.207843 0.203922 Xa412.6475 74.5547 m412.6475 79.2158 l313.7783 97.8193 l313.7793 96.6328 l412.6475 74.5547 lf0.345098 0.219608 0.294118 0 0.670588 0.705882 0.682353 Xa412.6475 82.1318 m412.6475 79.2158 l313.7783 97.8193 l313.1123 97.9307 313.208 98.667 v313.3027 99.4033 314.1025 99.2451 y412.6475 82.1318 lf0.65098 0.580392 0.592157 0.396078 0.290196 0.290196 0.282353 Xa412.6475 79.8701 m412.6475 79.2158 l313.7783 97.8193 l313.333 97.8936 313.2227 98.3242 v313.1982 98.4199 412.6475 79.8701 yfUu0.552941 0.431373 0.505882 0.117647 0.458824 0.478431 0.45098 Xa241.3223 115.6934 m239.918 114.8389 238.0508 113.9102 235.5918 113.5068 c228.7998 112.3945 220.6621 111.0186 y167.0918 103.251 l0.121094 78.249 l0.121094 75.7021 l167.0479 102.2813 l220.5557 110.4023 l228.5801 111.8379 235.6172 113.1992 v242.6533 114.5596 244.8701 118.7266 y244.7412 118.7627 l243.7949 117.1982 241.3223 115.6934 vf0.666667 0.584314 0.670588 0.552941 0.223529 0.227451 0.2 Xa243.877 117.7705 m243.54 117.416 243.3994 117.2002 242.2598 116.2256 c241.1201 115.252 238.2891 113.8916 235.6328 113.3955 C231.4951 112.7715 226.4365 111.7627 220.5322 110.8369 c206.377 108.6182 187.6943 106.0859 167.1802 102.8691 c94.9878 91.5459 0.121094 76.6641 y0.121094 76.0225 l167.0415 102.5996 l220.5537 110.7217 l235.6602 113.3223 L237.4619 113.542 239.7783 114.627 v242.0938 115.7119 242.9395 116.6426 243.4365 117.127 c244.3711 118.0371 244.833 118.7813 y244.5693 118.5 243.877 117.7705 vf0.694118 0.619608 0.627451 0.572549 0.203922 0.207843 0.203922 Xa242.8662 116.7588 m242.333 116.3545 240.8447 115.2705 239.4111 114.6084 c237.9766 113.9473 235.8174 113.542 y220.5811 111.0186 l167.2109 103.2607 l0.121094 78.2705 l0.121094 83.79 l167.3496 105.3857 l220.5068 112.0273 l235.7119 114.0811 l238.4541 114.7002 239.5205 115.0684 v240.5869 115.4355 242.6084 116.7598 243.0869 117.127 c243.5645 117.4951 244.833 118.7998 y244.8145 118.7266 l243.3994 117.1631 242.8662 116.7588 vf0.345098 0.219608 0.294118 0 0.670588 0.705882 0.682353 Xa244.8145 118.8184 m243.0684 116.9434 240.5869 115.749 239.2451 115.3447 c237.9033 114.9395 235.7393 114.6533 y220.5596 112.7764 l167.3477 106.7363 l0.121094 87.0547 l0.121094 83.79 l167.2607 105.374 l220.5859 112.0381 l235.7617 114.0879 l238.6748 114.6455 239.4287 114.9395 v240.1826 115.2334 242.9209 116.9248 y244.9063 118.8184 l244.7959 118.7998 244.8145 118.8184 Vf0.65098 0.580392 0.592157 0.396078 0.290196 0.290196 0.282353 Xa243.3994 117.4033 m242.9766 117.0166 241.2305 115.8037 240.1826 115.3447 c239.1348 114.8838 237.6182 114.4326 235.8379 114.207 c231.665 113.6768 226.5059 112.9424 220.5576 112.1865 c206.3848 110.3838 187.814 108.2861 167.3491 105.6807 c95.0771 96.4824 0.121094 84.5215 y0.121094 83.79 l167.3447 105.3848 l220.5576 112.0342 l235.8291 114.0967 l237.8115 114.2598 239.8154 115.1045 v241.8096 115.9463 243.0869 117.0166 243.418 117.3105 c243.748 117.6045 244.833 118.7266 y244.7227 118.6611 244.833 118.7813 v244.835 118.7832 243.8223 117.7891 243.3994 117.4033 cfU1 Ap0.498039 0.4 0.423529 0.05098 0.52549 0.533333 0.52549 Xa412.751 49.7285 m412.751 -39.2334 L395.4854 -39.21 L277.291 95.7705 276.124 96.7031 v274.958 97.6367 267.2021 105.3369 265.958 106.1934 c264.7139 107.0488 265.6587 108.4814 266.9688 108.8369 c270.4048 109.7686 275.1826 110.0449 282.625 110.9941 C282.2607 110.8477 273.9844 108.6221 275.8027 107.874 c283.3369 104.7754 282.5044 105.0527 412.751 49.7285 CfUu0.65098 0.486274 0.490196 0.184314 0.364706 0.411765 0.419608 Xa619.7236 296.6758 m611.2988 298.5313 592.1016 291.1387 588.0293 289.9414 c582.2441 288.2402 539.0283 271.9063 527.7998 267.4824 c516.5703 263.0586 429.3643 226.9883 Y429.3633 217.7168 L577.7402 285.0645 607.2188 294.1777 V609.3467 294.7109 615.75 295.8809 616.5352 295.8809 C628.2471 295.8809 622.7744 296.0469 y628.1475 294.8203 619.7236 296.6758 vf0 0 0 0 1 1 1 Xa622.3701 296.0645 m621.1299 296.3652 619.7236 296.6758 v611.2988 298.5313 592.1016 291.1387 588.0293 289.9414 c582.2441 288.2402 539.0283 271.9063 527.7998 267.4824 c516.5703 263.0586 429.3643 226.9883 Y429.3643 231.9727 L507.1201 261.5176 514.2324 264.2539 v518.5527 265.916 567.2324 283.8281 569.2275 284.5332 c571.2227 285.2363 604.957 296.7344 612.3486 297.2051 c619.7412 297.6738 621.6748 296.5176 623.083 296.0488 C623.0479 296.084 622.3701 296.0645 yf0.772549 0.647059 0.639216 0.72549 0.101961 0.133333 0.137255 Xa617.4082 297.5117 m610.5449 298.502 590.7822 293.332 587.3477 292.3223 c581.5635 290.6211 537.3271 277.3496 526.0977 272.9277 c514.8691 268.5039 429.3643 241.2813 Y429.3643 231.9727 L507.1201 261.5176 514.2324 264.2539 v518.5527 265.916 567.2324 283.8281 569.2275 284.5332 c571.2227 285.2363 604.957 296.7344 612.3486 297.2051 c618.3555 297.5859 621.9443 296.4727 622.998 296.0801 C623.2412 295.9883 623.0752 296.0566 Y621.5303 296.916 617.4082 297.5117 vf0.537255 0.443137 0.478431 0.109804 0.47451 0.478431 0.462745 Xa617.4082 297.5117 m610.5449 298.502 590.7822 293.332 587.3477 292.3223 c581.5635 290.6211 537.3271 277.3496 526.0977 272.9277 c514.8691 268.5039 429.3643 241.2813 Y429.3643 247.2012 L504.5713 268.4766 511.6836 271.2109 v516.0039 272.873 552.8535 283.8652 567.0537 287.8711 c581.2539 291.8789 605.0391 297.4023 612.4307 297.8711 c619.8232 298.3398 623.1436 296.0313 Y621.5303 296.916 617.4082 297.5117 vf0.670588 0.572549 0.619608 0.439216 0.262745 0.27451 0.258824 Xa841.8896 253.0234 m841.8896 206.2832 L429.3633 206.2832 L429.3545 217.7012 L531.082 263.9707 582.791 285.0352 V598.0713 291.2598 601.3389 292.7891 605.6523 293.8672 c609.9648 294.9473 611.1172 295.4668 617.2715 296.0898 C635.9307 296.0898 642.4404 295.293 666.5244 295.293 c715.2314 295.293 841.8896 253.0234 Yf0.65098 0.486274 0.490196 0.184314 0.364706 0.411765 0.419608 Xa841.8896 253.0254 m841.8896 263.082 L756.874 283.6191 746.5996 285.832 v736.3252 288.0449 699.2588 295.4805 684.9541 296.5801 c673.4922 297.4629 666.0674 295.9746 663.876 295.3926 c663.3174 295.2441 663.9111 295.293 y640.0635 295.293 666.5244 295.293 v715.2314 295.293 841.8896 253.0254 Yf0.501961 0.34902 0.403922 0.027451 0.529412 0.572549 0.560784 Xa748.7041 286.7754 m790.0732 278.9863 841.8896 266.1445 Y841.8896 263.0859 L756.874 283.6191 746.5996 285.832 v736.3252 288.0449 699.2588 295.4805 684.9541 296.5801 C682.2021 296.8262 679.6611 296.8281 677.4951 296.8301 c675.2324 296.834 673.3936 296.7031 672.1738 296.6465 c671.1318 296.5977 670.5391 296.6211 y676.2041 297.332 684.6709 296.9121 v687.8574 296.7539 698.2041 295.6035 700.5576 295.2559 c709.8164 293.8906 713.2275 293.6973 748.7041 286.7754 Cf0.823529 0.643137 0.556863 0.517647 0.145098 0.211765 0.243137 Xa748.7041 286.7754 m790.0732 278.9863 841.8896 266.1367 Y841.8896 269.3301 L765.3701 284.7285 751.8232 287.3613 v741.5049 289.3652 713.5938 294.6426 699.29 295.7422 C691.209 296.4648 676.2041 297.332 684.6709 296.9121 c687.8574 296.7539 698.2041 295.6035 700.5576 295.2559 c709.8164 293.8906 713.2275 293.6973 748.7041 286.7754 Cf0.568627 0.4 0.407843 0.058824 0.462745 0.517647 0.529412 Xa782.9131 282.3906 m824.2822 274.6016 841.8896 270.707 Y841.8896 269.3301 L765.3701 284.7285 751.8232 287.3613 v741.5049 289.3652 713.5938 294.6426 699.29 295.7422 C693.665 296.2441 703.1982 295.3867 714.6885 294.0859 c719.707 293.5176 730.9316 292.0469 731.6475 291.9414 c740.9053 290.5781 747.4355 289.3105 782.9131 282.3906 Cfu0.745098 0.678431 0.643137 0.8 0.07451 0.078431 0.086275 Xa801.3232 277.1406 m794.1201 277.084 L794.1201 285.9434 L801.3232 285.9434 L801.3232 277.1406 Lf836.6045 269.5469 m828.0283 269.2598 L828.0283 281.6973 L836.6045 281.6973 L836.6045 269.5469 Lf776.8232 282.1074 m770.7959 282.1074 L770.7959 290.4512 L776.8232 290.4512 L776.8232 282.1074 Lf758.5713 285.8867 m753.3242 285.6563 L753.3242 292.8555 L758.5713 292.8555 L758.5713 285.8867 Lf744.6592 288.4199 m739.9619 288.3008 L739.9619 295.0508 L744.6592 295.0508 L744.6592 288.4199 Lf733.6758 290.4707 m729.4053 290.2969 L729.4053 296.5156 L733.6758 296.5156 L733.6758 290.4707 Lf724.6445 292.0176 m720.8018 292.0176 L720.8018 298.041 L724.6445 298.041 L724.6445 292.0176 Lf717.2607 293.2676 m713.7842 293.209 L713.7842 298.041 L717.2607 298.041 L717.2607 293.2676 Lf711.0645 294.1992 m707.8652 294.1406 L707.8652 298.834 L711.0371 298.834 L711.0645 294.1992 Lf705.9111 294.7949 m702.8623 294.8535 L702.8623 299.2617 L705.9111 299.2617 L705.9111 294.7949 Lf701.2695 295.4297 m698.6523 295.4297 L698.6523 299.2617 L701.2695 299.2051 L701.2695 295.4297 Lf697.3936 295.7656 m694.8545 295.7656 L694.8545 299.5977 L697.3936 299.541 L697.3936 295.7656 Lf693.75 296.043 m691.4307 296.2227 L691.4307 299.6777 L693.75 299.7637 L693.75 296.043 Lf690.6553 296.3613 m688.5234 296.4785 L688.5234 299.9277 L690.6553 299.9277 L690.6553 296.3613 Lf687.8623 296.6582 m685.9131 296.6934 L685.9131 300.0371 L687.8623 300.0371 L687.8623 296.6582 Lf685.4189 296.8457 m683.6416 296.8457 L683.6416 299.9121 L685.4082 299.9121 L685.4189 296.8457 Lf683.1904 296.9629 m681.4434 296.9434 L681.4238 299.5547 L683.1904 299.5547 L683.1904 296.9629 Lf681.0557 296.9805 m679.2881 296.9629 L679.2881 299.8008 L681.0557 299.8008 L681.0557 296.9805 Lf677.1943 296.9336 m675.5576 296.8457 L675.5205 299.7539 L677.1943 299.7539 L677.1943 296.9336 Lf675.4268 296.8691 m673.751 296.7852 L673.7529 299.6895 L675.4268 299.6895 L675.4268 296.8691 Lf673.6592 296.7852 m670.126 296.4512 668.8584 296.3027 v667.5918 296.1523 663.7275 295.3555 y666.2246 296.4355 668.7959 297.3301 v671.3682 298.2246 673.6416 298.6348 Y673.6592 296.7852 Lf679.0352 296.9414 m677.3037 296.9063 L677.3115 299.8047 L679.0352 299.7598 L679.0352 296.9414 LfU748.7021 298.7656 m774.8232 296.2305 841.8896 289.5215 Y841.8896 277.7891 L827.4541 280.248 799.7744 284.7324 v786.2646 286.9199 757.9238 291.9473 733.5986 294.9648 c708.084 298.1328 686.7744 299.248 682.2334 299.4473 c673.3652 299.8379 663.6904 295.2813 y662.6836 295.3184 661.417 295.3184 V661.3193 295.3184 664.0635 297.7773 671.5127 299.9355 C682.916 303.6387 722.583 301.2988 748.7021 298.7656 cBb1 (Unnamed gradient 1) 752.4492 294.5234 84.2894 4.98738 1 0 0 1 0 0 Bg0.496263 4.96262 184.4978 -18.4498 660.1523 303.7529 Xm849.1388 8491.375 184.4978 -18.4498 -188.9863 -8187.623 Bc0.496263 4.96262 184.4978 -18.4498 660.1523 303.7529 Bm849.1388 8491.375 184.4978 -18.4498 660.6484 308.7153 Bcf0 BB1 g691.3701 257.9297 m706.5977 242.998 737.1064 206.2598 Y726.8975 206.2832 L700.9385 237.543 685.4814 256.209 v684.9971 256.793 684.5098 257.377 684.0186 257.9629 C691.3701 257.9297 Lf664.9014 283.6309 m671.7256 276.9609 680.3447 268.5625 687.667 261.502 C681.0049 261.5195 L674.166 269.5039 666.9053 277.4434 661.1182 283.6309 C664.9014 283.6309 Lf659.0967 285.7832 m653.6104 291.6094 649.8271 295.4551 y652.8789 295.4023 l656.9189 291.4355 662.6934 285.7891 V659.0967 285.7832 Lfu0 Ap0.745098 0.643137 0.678431 0.803922 0.070588 0.090196 0.078431 Xa587.3398 296.9355 m587.3398 291.0371 l583.2207 291.1406 l583.2207 296.7285 lF581.0811 296.1016 m581.0811 289.0527 l576.4414 289.1563 l576.4414 294.7441 lF573.2031 294.6875 m573.2031 286.6367 l568.1475 286.834 l568.1475 292.4219 lF562.998 291.4102 m562.998 283.3594 l557.0996 283.9316 l557.0996 289.5195 lF549.0488 289.7266 m549.0488 278.2109 l541.8398 278.7832 l541.8398 287.834 lF529.1064 283.3594 m529.1133 271.1523 l520.3135 271.7246 l520.3066 281.4688 lF592.3955 298.0586 m592.3955 292.7227 l588.4629 292.8145 l588.4629 297.8711 lF498.0244 276.5273 m497.9268 259.6836 l486.5088 260.5254 l486.5088 274.6348 lF441.4766 260.8926 m441.4766 238.4219 l429.3643 238.9922 l429.3643 259 lF596.5146 299.2754 m596.5146 293.9395 l592.957 294.0313 l592.957 299.0879 lF599.791 300.3047 m599.791 294.9688 l596.7949 295.0625 l596.7949 300.1172 lF602.5068 300.5859 m602.5068 295.998 l599.9785 295.873 l599.9785 300.4258 lF604.7539 299.5527 m604.7539 296.1719 l602.6855 296.2539 l602.6855 299.3926 lF607.1621 299.6133 m607.1621 296.5332 l604.8535 296.6152 l604.8535 299.4512 lF609.5693 299.6934 m609.5693 296.8945 l607.2607 296.9766 l607.2607 299.5313 lF614.124 299.793 m614.124 297.4648 l611.9355 297.5469 l611.9355 299.6328 lF624.96 296.4414 m625.1426 296.2598 624.1182 296.0488 y623.0059 296.0586 l621.5752 296.6406 619.167 297.1816 V617 297.4824 614.1836 297.4648 y614.1846 299.5117 L622.251 298.3086 624.96 296.4414 Vf611.7764 299.6602 m611.8359 297.2246 l609.6484 297.3047 l609.6484 299.7539 lFU1 Ap623.8486 296.0566 m623.8584 296.0566 623.7568 296.2344 623.6768 296.293 C621.9346 298.4063 606.7441 300.1211 594.249 298.1621 c581.7539 296.2012 429.3633 257.7285 Y429.3633 277.2383 L563.9063 299.6465 595.4746 302.3262 v620.0996 304.418 626.4414 296.8164 627.0322 296.0234 c627.0635 295.9805 625.0039 296.0254 623.8486 296.0566 CBb1 (Unnamed gradient 1) 524.6738 292.0293 -76.9081 10.7954 1 0 0 1 0 0 Bg2.4453 -10.5148 -199.8918 -46.4865 624.6299 315.2749 Xm1881.1626 -8088.9956 -199.8918 -46.4865 -1256.5327 8404.2705 Bc2.4453 -10.5148 -199.8918 -46.4865 624.6299 315.2749 Bm1881.1626 -8088.9956 -199.8918 -46.4865 627.0752 304.7603 Bcf0 BBUu413.4277 310.48 m296.9717 321.9536 233.7988 339.02 V221.3164 342.3931 211.5088 350.3345 204.9268 357.2505 C201.4746 360.7612 L201.4336 360.7603 174.6611 360.7603 Y171.541 351.8237 164.9346 338.7476 152.2686 332.2612 c146.8594 329.4917 135.6846 324.2876 120.4629 319.4868 c105.3916 314.7339 77.2529 307.8105 59.8008 303.041 c24.1465 293.3047 0 289.2793 y0 205.8105 L413.4277 205.8105 L413.4277 310.48 LBb1 (Unnamed gradient 36) 263.5234 182.0313 126.7368 189.6097 1 0 0 1 0 0 Bg-113.4131 151.9516 318.8936 238.0147 104.0767 63.0234 Xm-4849.1982 6496.9863 318.8936 238.0147 4953.2754 -6433.9629 Bc-113.4131 151.9516 318.8936 238.0147 104.0767 63.0234 Bm-4849.1982 6496.9863 318.8936 238.0147 -9.33643 214.9746 Bcf0 BB*u0 Ap1 D0.95 g188.3438 360.7603 m190.1279 353.5415 193.3877 343.6665 199.251 338.1929 c202.1709 335.4683 203.6982 334.0884 205.5518 332.7437 c207.751 331.1489 210.2764 329.6997 214.2344 327.4663 c221.3506 323.4487 229.1904 320.3306 237.6221 315.6978 c254.9912 306.1563 271.8018 296.7754 286.9209 288.4512 c316.3994 272.2246 413.4277 217.3145 Y413.4277 224.918 L413.4277 235.7988 L397.3516 233.2188 L392.208 235.8789 386.0889 239.0449 379.3896 242.5156 C413.4277 247.9824 L413.4277 258.916 L363.3057 250.8672 L357.9912 253.6289 352.5303 256.4727 347.0693 259.3223 C403.7158 268.4199 L409.6143 266.5723 413.4277 265.377 Y413.4277 266.0078 L413.4277 269.4453 L373.9873 281.5234 310.8135 298.5898 v302.5859 300.8125 271.3525 309.2051 244.5654 317.9565 c226.0537 324.0054 210.3936 329.5757 202.9326 336.0581 c199.1143 339.3745 196.1006 342.5093 193.8193 346.6704 c191.1396 351.5601 189.5654 356.5737 188.4736 360.7603 C188.3438 360.7603 Lf0 D253.3145 309.4487 m243.3447 314.8325 235.541 319.0327 Y247.2764 315.5747 262.8623 310.9829 V253.3145 309.4487 Lf276.9189 296.6719 m273.0654 298.7656 268.9141 301.0156 264.7783 303.252 C280.5205 305.7813 L286.7549 303.9453 293.124 302.0684 299.2646 300.2598 C276.9189 296.6719 Lf289.5234 289.7891 m318.8408 294.498 L330.1104 291.1836 338.2607 288.7871 339.4111 288.459 c339.6943 288.3789 340.2715 288.2051 341.0889 287.9551 C303.9678 281.9941 L298.2959 285.0176 293.3643 287.6758 289.5234 289.7891 Cf332.6279 266.873 m327.6865 269.459 322.8594 271.9961 318.2607 274.4199 C362.0391 281.4512 L368.6221 279.4004 375.9082 277.1211 382.8789 274.9414 C332.6279 266.873 Lf*Uu0 0 0 0 1 1 1 Xa165.5537 340.7427 m166.6826 340.7427 L167.0498 341.2515 167.3838 341.7466 167.6846 342.2251 C166.6982 342.2251 L166.3291 341.728 165.9463 341.2329 165.5537 340.7427 Cf152.9326 330.2368 m152.8975 330.2183 152.8574 330.1978 152.8213 330.1782 C154.9658 330.1782 L156.3262 330.9819 157.6143 331.855 158.8174 332.7739 C157.0938 332.7739 L155.79 331.8608 154.4053 331.0112 152.9326 330.2368 cf145.4414 326.6577 m148.2266 326.6577 L149.8408 327.4312 151.4346 328.2358 152.9814 329.0659 C150.6182 329.0659 L149.1592 328.3521 147.4189 327.5386 145.4414 326.6577 Cf158.5967 333.8862 m160.2061 333.8862 L161.292 334.7935 162.6216 335.8589 163.5396 336.7944 C162.1724 336.8799 L161.1626 335.9131 159.7363 334.7681 158.5967 333.8862 Cf167.4971 343.3374 m168.3584 343.3374 L168.6846 343.8931 169 344.4478 169.3047 345.0063 C168.6113 345.0063 L168.2549 344.4468 167.8828 343.8901 167.4971 343.3374 Cf162.9346 337.7769 m164.2666 337.7769 L164.833 338.4019 165.3555 339.022 165.8369 339.6304 C164.626 339.6304 L164.085 339.0024 163.5205 338.3843 162.9346 337.7769 Cf102.5488 311.813 m105.3701 311.645 l112.5869 313.7661 115.46 314.6099 V111.8643 314.6099 l102.5488 311.813 lf136.5918 322.9507 m139.8467 322.9507 L141.8174 323.7583 143.8369 324.6245 145.8525 325.5454 C142.8965 325.5454 L140.9658 324.7163 138.8564 323.8452 136.5918 322.9507 Cf86.2607 307.3438 m85.7217 307.1973 89.7393 307.0508 Y94.7305 308.502 101.1104 310.3774 V97.3623 310.5327 L93.7734 309.5503 89.9248 308.3262 86.2607 307.3438 cf126.583 319.2446 m130.124 319.2446 L132.2197 319.9878 134.582 320.8589 137.0752 321.8394 C133.7217 321.8394 L131.4629 320.98 129.0771 320.1089 126.583 319.2446 Cf120.001 317.0649 m118.6289 316.6323 117.1611 316.1821 115.6279 315.7222 C119.2432 315.7222 L120.5342 316.103 121.2998 316.3267 y123.4814 316.9741 126.9102 318.1323 V123.2988 318.1323 L122.2158 317.7729 121.1182 317.4165 120.001 317.0649 cf175.5054 360.1274 m175.5054 360.1255 175.5034 360.1235 175.5034 360.1216 C174.9038 358.4048 173.1807 353.7251 172.333 351.8638 C172.5498 351.8638 L173.4951 354.1772 175.647 360.5356 175.5054 360.1274 Cf170.5127 348.0767 m170.2021 347.521 169.6396 346.6733 169.3037 346.1187 C169.8984 346.1187 L170.1875 346.6743 170.7061 347.522 170.9756 348.0767 C170.5127 348.0767 Lf172.2578 350.9229 m171.9805 350.9229 L171.6846 350.3086 171.3711 349.6904 171.0449 349.0693 C171.4307 349.0693 L171.7168 349.6904 171.9941 350.3096 172.2578 350.9229 Cf1 Ap8.49316 286.582 m0 284.9863 l0 280.8633 l16.4775 285.625 16.6377 285.625 v16.7959 285.625 8.49316 286.582 yf37.2373 294.4082 m31.6514 292.9004 25.0459 291.1191 20.6299 289.9375 C26.5381 288.1797 l42.9854 293.1309 l37.2373 294.4082 Lf80.9912 306.0645 m76.665 304.9102 72.667 303.9395 68.6953 302.8711 C73.1582 302.1777 l84.8652 305.5293 L80.9912 306.0645 Lf61.2793 300.8164 m55.542 299.25 44.9307 296.3691 y50.4912 295.5254 l66.9385 299.998 l61.46 300.8672 61.2793 300.8164 VfU0.95 g193.9658 360.7603 m196.2393 356.0425 199.0557 350.436 202.6104 346.5356 c208.8271 339.7183 218.3975 335.436 231.2607 331.0308 c258.4346 321.7261 413.4277 294.6992 Y413.4277 297.3066 L380.583 301.6523 325.1885 312.4214 V301.3232 317.062 258.5752 324.4233 239.5537 329.562 C228.6182 332.5171 210.3037 339.5171 203.3486 347.2749 C198.9365 352.1968 196.4639 356.7808 194.4639 360.7603 C193.9658 360.7603 Lf0 Ap0 0 0 0 1 1 1 Xa379.2051 205.791 m342.3965 235.8008 288.2451 262.4512 266.5068 274.3086 c237.8174 289.9551 200.6123 312.2817 193.5791 318.8013 c193.1436 319.2046 192.7275 319.605 192.3291 320.0024 c189.0752 323.2544 187.0596 326.3149 185.4609 329.8394 c183.4268 334.3276 183.0186 337.937 182.8994 340.7026 c182.6826 345.7134 182.6426 354.2573 182.5498 360.771 C183.4277 360.771 L183.5605 357.4575 183.626 353.3257 183.8662 347.978 c184.1689 341.2446 185.1885 336.2827 187.2607 332.1528 c188.791 329.105 190.1104 326.9507 192.0166 324.8267 c193.1064 323.6118 194.5205 322.1948 195.7432 320.9712 c202.0029 314.7104 250.9111 286.2773 303.6406 259.3359 c341.1943 240.1484 375.7334 221.2168 401.9326 205.7969 C379.2051 205.791 LfUu1 Ap240.4219 574.5249 m246.6035 573.2563 258.1406 570.6167 V269.6777 567.9761 286.5723 563.9644 307.9961 558.479 C329.4199 552.9946 355.5293 545.6021 376.2832 539.5815 C397.0361 533.562 412.4336 528.9126 Y412.4336 470.8804 L412.4336 412.8472 L206.2627 412.8472 L0.091797 412.8472 L0.091797 470.8804 L0.091797 528.9126 L15.4902 533.562 36.2432 539.5815 V56.9971 545.6021 83.1064 552.9946 104.5303 558.479 C125.9541 563.9644 143.1191 567.9761 154.9277 570.6167 C166.7363 573.2563 173.1885 574.5249 Y198.0713 575.6177 206.8047 575.6177 v215.5391 575.6177 240.4219 574.5249 YBb1 (New Gradient Swatch 3) 206.2627 412.8472 90 164.9363 1 0 0 1 0 0 Bg-0.000007 164.9363 416.3418 0.000018 -1.9082 412.8472 Xm-0.000349 7979.2627 416.3418 0.000018 -1.90771 -7566.416 Bc-0.000007 164.9363 416.3418 0.000018 -1.9082 412.8472 Bm-0.000349 7979.2627 416.3418 0.000018 -1.9082 577.7837 Bcf0 BB0.95 g238.2578 573.5024 m250.416 572.6733 270.5879 570.3188 298.0049 563.8169 c345.5156 552.5483 412.4336 536.2417 Y412.4336 528.9126 L350.8438 547.5093 307.9961 558.479 v265.1475 569.4497 239.7969 573.0405 Y229.3477 574.1089 238.2578 573.5024 vf174.2676 573.5024 m162.1094 572.6733 141.9375 570.3188 114.5205 563.8169 c67.0107 552.5483 0.091797 536.2417 Y0.091797 528.9126 L61.6826 547.5093 104.5303 558.479 v147.3789 569.4497 172.2021 573.0405 Y183.1777 574.1089 174.2676 573.5024 vf0.745098 0.619608 0.682353 0.737255 0.109804 0.137255 0.121569 Xa235.3398 574.7271 m224.7344 575.1567 L226.4395 574.7329 230.3008 574.2681 v231.6016 574.1108 233.3838 573.7856 235.1094 573.6938 c246.7686 573.0718 268.0674 570.9165 298.0049 563.8169 c345.5156 552.5483 412.4336 536.2417 Y412.5264 545.4331 L355.5059 555.812 307.5508 565.5952 v259.5977 575.3804 239.8389 574.4897 Y235.3398 574.7271 Lf177.1699 574.6802 m186.8574 575.0728 L184.2891 574.73 181.6836 574.2681 v179.0762 573.8071 177.3076 573.687 Y165.624 573.0581 144.3652 570.894 114.5205 563.8169 c67.0107 552.5483 0.091797 536.2417 Y0 545.4331 L57.0205 555.812 104.9746 565.5952 v152.9287 575.3804 172.6875 574.4897 Y177.1699 574.6802 Lfuu0 Ap209.1318 559.3862 m203.6563 559.3862 L202.5508 547.3481 L209.9824 547.3481 L209.1318 559.3862 LBb1 (Unnamed gradient 4) 206.2666 378.8721 90 197.2838 1 0 0 1 0 0 Bg-0.000009 197.2838 11.4316 0 200.5508 378.8721 Xm-0.000341 7810.791 11.4316 0 200.5513 -7431.9189 Bc-0.000009 197.2838 11.4316 0 200.5508 378.8721 Bm-0.000341 7810.791 11.4316 0 200.5508 576.1558 Bcf0 BB190.1875 412.8706 m219.4922 412.8706 L216.6582 452.9448 L193.8711 452.9448 L190.1875 412.8706 LBb1 (Unnamed gradient 4) 204.8398 332.8486 90 272.7164 1 0 0 1 0 0 Bg-0.000012 272.7164 33.3047 0.000001 188.1875 332.8486 Xm-0.000345 7897.8179 33.3047 0.000001 188.188 -7564.9688 Bc-0.000012 272.7164 33.3047 0.000001 188.1875 332.8486 Bm-0.000345 7897.8179 33.3047 0.000001 188.1875 605.5649 Bcf0 BB208.3955 569.7944 m204.6133 569.7944 L204.041 563.5688 L208.835 563.5688 L208.3955 569.7944 LBb1 (Unnamed gradient 4) 206.438 385.876 90 189.6991 1 0 0 1 0 0 Bg-0.000008 189.6991 8.79395 0 202.041 385.876 Xm-0.000341 7801.7451 8.79395 0 202.0415 -7415.8691 Bc-0.000008 189.6991 8.79395 0 202.041 385.876 Bm-0.000341 7801.7451 8.79395 0 202.041 575.5752 Bcf0 BB210.3828 541.6948 m202.0303 541.6948 L199.9121 518.6567 L212.0117 518.6567 L210.3828 541.6948 LBb1 (Unnamed gradient 4) 205.9619 367.5278 90 210.8444 1 0 0 1 0 0 Bg-0.000009 210.8444 16.0996 0.000001 197.9121 367.5278 Xm-0.000342 7827.833 16.0996 0.000001 197.9126 -7460.3047 Bc-0.000009 210.8444 16.0996 0.000001 197.9121 367.5278 Bm-0.000342 7827.833 16.0996 0.000001 197.9121 578.3721 Bcf0 BB208.0039 575.6206 m206.0996 575.6343 206.6104 575.6343 V207.1211 575.6343 205.1611 575.6206 Y205.0332 574.313 L204.9102 573.022 L206.5391 573.022 L208.167 573.022 L208.0781 574.3188 L208.0039 575.6206 LBb1 (Unnamed gradient 4) 206.5386 390.1118 90 185.3595 1 0 0 1 0 0 Bg-0.000008 185.3595 7.25684 0 202.9102 390.1118 Xm-0.000341 7796.6284 7.25684 0 202.9106 -7406.5166 Bc-0.000008 185.3595 7.25684 0 202.9102 390.1118 Bm-0.000341 7796.6284 7.25684 0 202.9102 575.4712 Bcf0 BB212.5977 510.3569 m199.1494 510.3569 L195.1475 466.8257 L215.6758 466.8257 L212.5977 510.3569 LBb1 (Unnamed gradient 4) 205.4116 349.937 90 236.2203 1 0 0 1 0 0 Bg-0.00001 236.2203 24.5283 0.000001 193.1475 349.937 Xm-0.000344 7861.5225 24.5283 0.000001 193.1479 -7511.5859 Bc-0.00001 236.2203 24.5283 0.000001 193.1475 349.937 Bm-0.000344 7861.5225 24.5283 0.000001 193.1475 586.1572 Bcf0 BBUUUu841.8896 597.7568 m670.21 595.9756 580.5684 594.8721 560.5488 575.3643 c540.3711 555.7021 586.748 542.8467 564.6582 513.8926 c549.166 493.584 473.2227 471.1934 429.291 457.4883 C429.3633 413.5615 l841.8184 413.5615 l841.8184 474.2695 L805.4258 500.6465 749.3359 543.082 738.543 559.749 c722.375 584.7197 841.8896 595.9619 y841.8896 597.7568 lBb1 (Unnamed gradient 36) 429.291 505.6592 0 412.5986 1 0 0 1 0 0 Bg412.5986 0 0 -188.1953 429.291 599.7568 Xm8202.291 0 0 -188.1953 -7773 599.7568 Bc412.5986 0 0 -188.1953 429.291 599.7568 Bm8202.291 0 0 -188.1953 841.8896 599.7568 Bcf0 BB0 0 0 0 1 1 1 Xa841.8896 596.5796 m678.3838 594.7983 584.1113 594.0732 564.0508 575.3643 c543.9922 556.6553 589.0039 542.8467 567.9668 513.8926 c551.9746 491.8828 468.4453 463.2148 429.291 450.7285 C429.291 451.6172 429.291 413.5615 y841.8184 413.5615 l841.8184 466.8086 841.8184 467.0879 V808.5215 492.1758 744.8438 541.4668 733.5703 559.749 c718.4834 584.2173 841.8896 596.291 Y841.8896 596.5796 lf841.8184 596.8789 m692.957 595.0977 587.4922 591.9873 570.5293 575.3643 c551.8555 557.0645 589.3008 545.1006 574.0918 513.8926 c561.1211 487.2754 429.291 435.1479 y429.3633 413.5615 l841.8887 413.5615 l841.8906 451.9746 l738.8828 534.7793 724.8633 559.749 v710.8457 584.7197 841.8184 596.5635 y841.8184 596.8789 lBb1 (Unnamed gradient 36) 429.291 505.2202 0 412.5996 1 0 0 1 0 0 Bg412.5996 0 0 -187.3174 429.291 598.8789 Xm8202.291 0 0 -187.3174 -7773 598.8789 Bc412.5996 0 0 -187.3174 429.291 598.8789 Bm8202.291 0 0 -187.3174 841.8906 598.8789 Bcf0 BB0 0 0 0 1 1 1 Xa841.8896 597.4629 m741.7178 595.7773 682.8652 591.4873 667.502 577.1572 c647.4434 558.4482 692.4551 544.6396 671.418 515.6855 c663.5332 504.835 625.9492 458.0898 589.8652 413.4775 C640.291 413.3252 L656.9004 441.2275 670.9648 470.417 682.291 492.2754 c711.1211 547.9136 661.8379 561.043 676.1797 575.9814 c690.5215 590.9209 769.791 594.8721 841.8906 597.3486 C841.8896 597.4629 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF